/**
 * @license
 * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
// @version 0.7.24
'undefined' == typeof WeakMap &&
  !(() => {
    const e = Object.defineProperty;
    let t = Date.now() % 1e9;

    const n = function () {
      this.name = '__st' + ((1e9 * Math.random()) >>> 0) + (t++ + '__');
    };

    (n.prototype = {
      set(t, n) {
        const r = t[this.name];
        return (
          r && r[0] === t
            ? (r[1] = n)
            : e(t, this.name, { value: [t, n], writable: !0 }),
          this
        );
      },
      get(e) {
        let t;
        return (t = e[this.name]) && t[0] === e ? t[1] : void 0;
      },
      delete(e) {
        const t = e[this.name];
        return !(!t || t[0] !== e) && ((t[0] = t[1] = void 0), !0);
      },
      has(e) {
        const t = e[this.name];
        return !!t && t[0] === e;
      },
    }),
      (window.WeakMap = n);
  })(),
  (window.ShadowDOMPolyfill = {}),
  ((e) => {
    'use strict';
    function t() {
      if ('undefined' != typeof chrome && chrome.app && chrome.app.runtime)
        return !1;
      if (navigator.getDeviceStorage) return !1;
      try {
        const e = new Function('return true;');
        return e();
      } catch (t) {
        return !1;
      }
    }
    function n(e) {
      if (!e) throw new Error('Assertion failed');
    }
    function r(e, t) {
      for (let n = k(t), r = 0; r < n.length; r++) {
        const o = n[r];
        A(e, o, F(t, o));
      }
      return e;
    }
    function o(e, t) {
      for (let n = k(t), r = 0; r < n.length; r++) {
        const o = n[r];
        switch (o) {
          case 'arguments':
          case 'caller':
          case 'length':
          case 'name':
          case 'prototype':
          case 'toString':
            continue;
        }
        A(e, o, F(t, o));
      }
      return e;
    }
    function i(e, t) {
      for (let n = 0; n < t.length; n++) if (t[n] in e) return t[n];
    }
    function a(e, t, n) {
      (B.value = n), A(e, t, B);
    }
    function s(e, t) {
      let n = e.__proto__ || Object.getPrototypeOf(e);
      if (U)
        try {
          k(n);
        } catch (r) {
          n = n.__proto__;
        }
      const o = R.get(n);
      if (o) return o;
      const i = s(n),
        a = E(i);
      return g(n, a, t), a;
    }
    function c(e, t) {
      m(e, t, !0);
    }
    function u(e, t) {
      m(t, e, !1);
    }
    function l(e) {
      return /^on[a-z]+$/.test(e);
    }
    function p(e) {
      return /^[a-zA-Z_$][a-zA-Z_$0-9]*$/.test(e);
    }
    function d(e) {
      return I && p(e)
        ? new Function('return this.__impl4cf1e782hg__.' + e)
        : function () {
            return this.__impl4cf1e782hg__[e];
          };
    }
    function f(e) {
      return I && p(e)
        ? new Function('v', 'this.__impl4cf1e782hg__.' + e + ' = v')
        : function (t) {
            this.__impl4cf1e782hg__[e] = t;
          };
    }
    function h(e) {
      return I && p(e)
        ? new Function(
            'return this.__impl4cf1e782hg__.' +
              e +
              '.apply(this.__impl4cf1e782hg__, arguments)'
          )
        : function () {
            return this.__impl4cf1e782hg__[e].apply(
              this.__impl4cf1e782hg__,
              arguments
            );
          };
    }
    function w(e, t) {
      try {
        return e === window && 'showModalDialog' === t
          ? q
          : Object.getOwnPropertyDescriptor(e, t);
      } catch (n) {
        return q;
      }
    }
    function m(t, n, r, o) {
      for (let i = k(t), a = 0; a < i.length; a++) {
        const s = i[a];
        if (
          'polymerBlackList_' !== s &&
          !(s in n || (t.polymerBlackList_ && t.polymerBlackList_[s]))
        ) {
          U && t.__lookupGetter__(s);
          let c;
          let u;
          const p = w(t, s);
          if ('function' != typeof p.value) {
            const m = l(s);
            (c = m ? e.getEventHandlerGetter(s) : d(s)),
              (p.writable || p.set || V) &&
                (u = m ? e.getEventHandlerSetter(s) : f(s));
            const v = V || p.configurable;
            A(n, s, {
              get: c,
              set: u,
              configurable: v,
              enumerable: p.enumerable,
            });
          } else r && (n[s] = h(s));
        }
      }
    }
    function v(e, t, n) {
      if (null != e) {
        const r = e.prototype;
        g(r, t, n), o(t, e);
      }
    }
    function g(e, t, r) {
      const o = t.prototype;
      n(void 0 === R.get(e)),
        R.set(e, t),
        P.set(o, e),
        c(e, o),
        r && u(o, r),
        a(o, 'constructor', t),
        (t.prototype = o);
    }
    function b(e, t) {
      return R.get(t.prototype) === e;
    }
    function y(e) {
      const t = Object.getPrototypeOf(e),
        n = s(t),
        r = E(n);
      return g(t, r, e), r;
    }
    function E(e) {
      function t(t) {
        e.call(this, t);
      }
      const n = Object.create(e.prototype);
      return (n.constructor = t), (t.prototype = n), t;
    }
    function S(e) {
      return e && e.__impl4cf1e782hg__;
    }
    function M(e) {
      return !S(e);
    }
    function T(e) {
      if (null === e) return null;
      n(M(e));
      const t = e.__wrapper8e3dd93a60__;
      return null != t ? t : (e.__wrapper8e3dd93a60__ = new (s(e, e))(e));
    }
    function O(e) {
      return null === e ? null : (n(S(e)), e.__impl4cf1e782hg__);
    }
    function N(e) {
      return e.__impl4cf1e782hg__;
    }
    function j(e, t) {
      (t.__impl4cf1e782hg__ = e), (e.__wrapper8e3dd93a60__ = t);
    }
    function L(e) {
      return e && S(e) ? O(e) : e;
    }
    function _(e) {
      return e && !S(e) ? T(e) : e;
    }
    function D(e, t) {
      null !== t &&
        (n(M(e)), n(void 0 === t || S(t)), (e.__wrapper8e3dd93a60__ = t));
    }
    function C(e, t, n) {
      (G.get = n), A(e.prototype, t, G);
    }
    function H(e, t) {
      C(e, t, function () {
        return T(this.__impl4cf1e782hg__[t]);
      });
    }
    function x(e, t) {
      e.forEach((e) => {
        t.forEach((t) => {
          e.prototype[t] = function () {
            const e = _(this);
            return e[t].apply(e, arguments);
          };
        });
      });
    }
    var R = new WeakMap();
    var P = new WeakMap();
    const W = Object.create(null);
    var I = t();
    var A = Object.defineProperty;
    var k = Object.getOwnPropertyNames;
    var F = Object.getOwnPropertyDescriptor;
    var B = { value: void 0, configurable: !0, enumerable: !1, writable: !0 };
    k(window);
    var U = /Firefox/.test(navigator.userAgent),
      q = {
        get() {},
        set(e) {},
        configurable: !0,
        enumerable: !0,
      },
      V = (() => {
        const e = Object.getOwnPropertyDescriptor(Node.prototype, 'nodeType');
        return e && !e.get && !e.set;
      })(),
      G = { get: void 0, configurable: !0, enumerable: !0 };
    (e.addForwardingProperties = c),
      (e.assert = n),
      (e.constructorTable = R),
      (e.defineGetter = C),
      (e.defineWrapGetter = H),
      (e.forwardMethodsToWrapper = x),
      (e.isIdentifierName = p),
      (e.isWrapper = S),
      (e.isWrapperFor = b),
      (e.mixin = r),
      (e.nativePrototypeTable = P),
      (e.oneOf = i),
      (e.registerObject = y),
      (e.registerWrapper = v),
      (e.rewrap = D),
      (e.setWrapper = j),
      (e.unsafeUnwrap = N),
      (e.unwrap = O),
      (e.unwrapIfNeeded = L),
      (e.wrap = T),
      (e.wrapIfNeeded = _),
      (e.wrappers = W);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e, t, n) {
      return { index: e, removed: t, addedCount: n };
    }
    function n() {}
    const r = 0,
      o = 1,
      i = 2,
      a = 3;
    (n.prototype = {
      calcEditDistances(e, t, n, r, o, i) {
        for (
          var a = i - o + 1, s = n - t + 1, c = new Array(a), u = 0;
          u < a;
          u++
        )
          (c[u] = new Array(s)), (c[u][0] = u);
        for (var l = 0; l < s; l++) c[0][l] = l;
        for (var u = 1; u < a; u++)
          for (var l = 1; l < s; l++)
            if (this.equals(e[t + l - 1], r[o + u - 1]))
              c[u][l] = c[u - 1][l - 1];
            else {
              const p = c[u - 1][l] + 1,
                d = c[u][l - 1] + 1;
              c[u][l] = p < d ? p : d;
            }
        return c;
      },
      spliceOperationsFromEditDistances(e) {
        for (
          var t = e.length - 1, n = e[0].length - 1, s = e[t][n], c = [];
          t > 0 || n > 0;

        )
          if (0 != t)
            if (0 != n) {
              let u;
              const l = e[t - 1][n - 1];
              const p = e[t - 1][n];
              const d = e[t][n - 1];
              (u = p < d ? (p < l ? p : l) : d < l ? d : l),
                u == l
                  ? (l == s ? c.push(r) : (c.push(o), (s = l)), t--, n--)
                  : u == p
                  ? (c.push(a), t--, (s = p))
                  : (c.push(i), n--, (s = d));
            } else c.push(a), t--;
          else c.push(i), n--;
        return c.reverse(), c;
      },
      calcSplices(e, n, s, c, u, l) {
        let p = 0;
        let d = 0;
        const f = Math.min(s - n, l - u);
        if (
          (0 == n && 0 == u && (p = this.sharedPrefix(e, c, f)),
          s == e.length &&
            l == c.length &&
            (d = this.sharedSuffix(e, c, f - p)),
          (n += p),
          (u += p),
          (s -= d),
          (l -= d),
          s - n == 0 && l - u == 0)
        )
          return [];
        if (n == s) {
          for (var h = t(n, [], 0); u < l; ) h.removed.push(c[u++]);
          return [h];
        }
        if (u == l) return [t(n, [], s - n)];
        for (
          var w = this.spliceOperationsFromEditDistances(
              this.calcEditDistances(e, n, s, c, u, l)
            ),
            h = void 0,
            m = [],
            v = n,
            g = u,
            b = 0;
          b < w.length;
          b++
        )
          switch (w[b]) {
            case r:
              h && (m.push(h), (h = void 0)), v++, g++;
              break;
            case o:
              h || (h = t(v, [], 0)),
                h.addedCount++,
                v++,
                h.removed.push(c[g]),
                g++;
              break;
            case i:
              h || (h = t(v, [], 0)), h.addedCount++, v++;
              break;
            case a:
              h || (h = t(v, [], 0)), h.removed.push(c[g]), g++;
          }
        return h && m.push(h), m;
      },
      sharedPrefix(e, t, n) {
        for (let r = 0; r < n; r++) if (!this.equals(e[r], t[r])) return r;
        return n;
      },
      sharedSuffix(e, t, n) {
        for (
          var r = e.length, o = t.length, i = 0;
          i < n && this.equals(e[--r], t[--o]);

        )
          i++;
        return i;
      },
      calculateSplices(e, t) {
        return this.calcSplices(e, 0, e.length, t, 0, t.length);
      },
      equals(e, t) {
        return e === t;
      },
    }),
      (e.ArraySplice = n);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t() {
      a = !1;
      const e = i.slice(0);
      i = [];
      for (let t = 0; t < e.length; t++) (0, e[t])();
    }
    function n(e) {
      i.push(e), a || ((a = !0), r(t, 0));
    }
    var r;
    const o = window.MutationObserver;
    var i = [];
    var a = !1;
    if (o) {
      let s = 1;
      const c = new o(t);
      const u = document.createTextNode(s);
      c.observe(u, { characterData: !0 }),
        (r = () => {
          (s = (s + 1) % 2), (u.data = s);
        });
    } else r = window.setTimeout;
    e.setEndOfMicrotask = n;
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      e.scheduled_ || ((e.scheduled_ = !0), h.push(e), w || (l(n), (w = !0)));
    }
    function n() {
      for (w = !1; h.length; ) {
        const e = h;
        (h = []),
          e.sort((e, t) => {
            return e.uid_ - t.uid_;
          });
        for (let t = 0; t < e.length; t++) {
          const n = e[t];
          n.scheduled_ = !1;
          const r = n.takeRecords();
          i(n), r.length && n.callback_(r, n);
        }
      }
    }
    function r(e, t) {
      (this.type = e),
        (this.target = t),
        (this.addedNodes = new d.NodeList()),
        (this.removedNodes = new d.NodeList()),
        (this.previousSibling = null),
        (this.nextSibling = null),
        (this.attributeName = null),
        (this.attributeNamespace = null),
        (this.oldValue = null);
    }
    function o(e, t) {
      for (; e; e = e.parentNode) {
        const n = f.get(e);
        if (n)
          for (let r = 0; r < n.length; r++) {
            const o = n[r];
            o.options.subtree && o.addTransientObserver(t);
          }
      }
    }
    function i(e) {
      for (let t = 0; t < e.nodes_.length; t++) {
        const n = e.nodes_[t],
          r = f.get(n);
        if (!r) return;
        for (let o = 0; o < r.length; o++) {
          const i = r[o];
          i.observer === e && i.removeTransientObservers();
        }
      }
    }
    function a(e, n, o) {
      for (
        var i = Object.create(null), a = Object.create(null), s = e;
        s;
        s = s.parentNode
      ) {
        const c = f.get(s);
        if (c)
          for (let u = 0; u < c.length; u++) {
            const l = c[u],
              p = l.options;
            if (
              (s === e || p.subtree) &&
              ('attributes' !== n || p.attributes) &&
              ('attributes' !== n ||
                !p.attributeFilter ||
                (null === o.namespace &&
                  p.attributeFilter.indexOf(o.name) !== -1)) &&
              ('characterData' !== n || p.characterData) &&
              ('childList' !== n || p.childList)
            ) {
              var d = l.observer;
              (i[d.uid_] = d),
                (('attributes' === n && p.attributeOldValue) ||
                  ('characterData' === n && p.characterDataOldValue)) &&
                  (a[d.uid_] = o.oldValue);
            }
          }
      }
      for (const h in i) {
        const d = i[h],
          w = new r(n, e);
        'name' in o &&
          'namespace' in o &&
          ((w.attributeName = o.name), (w.attributeNamespace = o.namespace)),
          o.addedNodes && (w.addedNodes = o.addedNodes),
          o.removedNodes && (w.removedNodes = o.removedNodes),
          o.previousSibling && (w.previousSibling = o.previousSibling),
          o.nextSibling && (w.nextSibling = o.nextSibling),
          void 0 !== a[h] && (w.oldValue = a[h]),
          t(d),
          d.records_.push(w);
      }
    }
    function s(e) {
      if (
        ((this.childList = !!e.childList),
        (this.subtree = !!e.subtree),
        'attributes' in e ||
        !('attributeOldValue' in e || 'attributeFilter' in e)
          ? (this.attributes = !!e.attributes)
          : (this.attributes = !0),
        'characterDataOldValue' in e && !('characterData' in e)
          ? (this.characterData = !0)
          : (this.characterData = !!e.characterData),
        (!this.attributes && (e.attributeOldValue || 'attributeFilter' in e)) ||
          (!this.characterData && e.characterDataOldValue))
      )
        throw new TypeError();
      if (
        ((this.characterData = !!e.characterData),
        (this.attributeOldValue = !!e.attributeOldValue),
        (this.characterDataOldValue = !!e.characterDataOldValue),
        'attributeFilter' in e)
      ) {
        if (null == e.attributeFilter || 'object' != typeof e.attributeFilter)
          throw new TypeError();
        this.attributeFilter = m.call(e.attributeFilter);
      } else this.attributeFilter = null;
    }
    function c(e) {
      (this.callback_ = e),
        (this.nodes_ = []),
        (this.records_ = []),
        (this.uid_ = ++v),
        (this.scheduled_ = !1);
    }
    function u(e, t, n) {
      (this.observer = e),
        (this.target = t),
        (this.options = n),
        (this.transientObservedNodes = []);
    }
    var l = e.setEndOfMicrotask;
    const p = e.wrapIfNeeded;
    var d = e.wrappers;
    var f = new WeakMap();
    var h = [];
    var w = !1;
    var m = Array.prototype.slice;
    var v = 0;
    (c.prototype = {
      constructor: c,
      observe(e, t) {
        e = p(e);
        let n;
        const r = new s(t);
        let o = f.get(e);
        o || f.set(e, (o = []));
        for (let i = 0; i < o.length; i++)
          o[i].observer === this &&
            ((n = o[i]), n.removeTransientObservers(), (n.options = r));
        n || ((n = new u(this, e, r)), o.push(n), this.nodes_.push(e));
      },
      disconnect() {
        this.nodes_.forEach(function (e) {
          for (let t = f.get(e), n = 0; n < t.length; n++) {
            const r = t[n];
            if (r.observer === this) {
              t.splice(n, 1);
              break;
            }
          }
        }, this),
          (this.records_ = []);
      },
      takeRecords() {
        const e = this.records_;
        return (this.records_ = []), e;
      },
    }),
      (u.prototype = {
        addTransientObserver(e) {
          if (e !== this.target) {
            t(this.observer), this.transientObservedNodes.push(e);
            let n = f.get(e);
            n || f.set(e, (n = [])), n.push(this);
          }
        },
        removeTransientObservers() {
          const e = this.transientObservedNodes;
          this.transientObservedNodes = [];
          for (let t = 0; t < e.length; t++)
            for (let n = e[t], r = f.get(n), o = 0; o < r.length; o++)
              if (r[o] === this) {
                r.splice(o, 1);
                break;
              }
        },
      }),
      (e.enqueueMutation = a),
      (e.registerTransientObservers = o),
      (e.wrappers.MutationObserver = c),
      (e.wrappers.MutationRecord = r);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e, t) {
      (this.root = e), (this.parent = t);
    }
    function n(e, t) {
      if (e.treeScope_ !== t) {
        e.treeScope_ = t;
        for (let r = e.shadowRoot; r; r = r.olderShadowRoot)
          r.treeScope_.parent = t;
        for (let o = e.firstChild; o; o = o.nextSibling) n(o, t);
      }
    }
    function r(n) {
      if ((n instanceof e.wrappers.Window, n.treeScope_)) return n.treeScope_;
      let o;
      const i = n.parentNode;
      return (o = i ? r(i) : new t(n, null)), (n.treeScope_ = o);
    }
    (t.prototype = {
      get renderer() {
        return this.root instanceof e.wrappers.ShadowRoot
          ? e.getRendererForHost(this.root.host)
          : null;
      },
      contains(e) {
        for (; e; e = e.parent) if (e === this) return !0;
        return !1;
      },
    }),
      (e.TreeScope = t),
      (e.getTreeScope = r),
      (e.setTreeScope = n);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      return e instanceof G.ShadowRoot;
    }
    function n(e) {
      return A(e).root;
    }
    function r(e, r) {
      const s = [];
      let c = e;
      for (s.push(c); c; ) {
        const u = a(c);
        if (u && u.length > 0) {
          for (let l = 0; l < u.length; l++) {
            const d = u[l];
            if (i(d)) {
              const f = n(d),
                h = f.olderShadowRoot;
              h && s.push(h);
            }
            s.push(d);
          }
          c = u[u.length - 1];
        } else if (t(c)) {
          if (p(e, c) && o(r)) break;
          (c = c.host), s.push(c);
        } else (c = c.parentNode), c && s.push(c);
      }
      return s;
    }
    function o(e) {
      if (!e) return !1;
      switch (e.type) {
        case 'abort':
        case 'error':
        case 'select':
        case 'change':
        case 'load':
        case 'reset':
        case 'resize':
        case 'scroll':
        case 'selectstart':
          return !0;
      }
      return !1;
    }
    function i(e) {
      return e instanceof HTMLShadowElement;
    }
    function a(t) {
      return e.getDestinationInsertionPoints(t);
    }
    function s(e, t) {
      if (0 === e.length) return t;
      t instanceof G.Window && (t = t.document);
      for (
        let n = A(t), r = e[0], o = A(r), i = u(n, o), a = 0;
        a < e.length;
        a++
      ) {
        const s = e[a];
        if (A(s) === i) return s;
      }
      return e[e.length - 1];
    }
    function c(e) {
      for (var t = []; e; e = e.parent) t.push(e);
      return t;
    }
    function u(e, t) {
      for (var n = c(e), r = c(t), o = null; n.length > 0 && r.length > 0; ) {
        const i = n.pop(),
          a = r.pop();
        if (i !== a) break;
        o = i;
      }
      return o;
    }
    function l(e, t, n) {
      t instanceof G.Window && (t = t.document);
      var o;
      const i = A(t);
      const a = A(n);
      const s = r(n, e);
      const o = u(i, a);
      o || (o = a.root);
      for (let c = o; c; c = c.parent)
        for (let l = 0; l < s.length; l++) {
          const p = s[l];
          if (A(p) === c) return p;
        }
      return null;
    }
    function p(e, t) {
      return A(e) === A(t);
    }
    function d(e) {
      if (!X.get(e) && (X.set(e, !0), h(V(e), V(e.target)), W)) {
        const t = W;
        throw ((W = null), t);
      }
    }
    function f(e) {
      switch (e.type) {
        case 'load':
        case 'beforeunload':
        case 'unload':
          return !0;
      }
      return !1;
    }
    function h(t, n) {
      if (K.get(t)) throw new Error('InvalidStateError');
      K.set(t, !0), e.renderAllPending();
      let o, i, a;
      if (f(t) && !t.bubbles) {
        var s = n;
        s instanceof G.Document && (a = s.defaultView) && ((i = s), (o = []));
      }
      if (!o)
        if (n instanceof G.Window) (a = n), (o = []);
        else if (((o = r(n, t)), !f(t))) {
          var s = o[o.length - 1];
          s instanceof G.Document && (a = s.defaultView);
        }
      return (
        ne.set(t, o),
        w(t, o, a, i) && m(t, o, a, i) && v(t, o, a, i),
        J.set(t, re),
        $['delete'](t, null),
        K['delete'](t),
        t.defaultPrevented
      );
    }
    function w(e, t, n, r) {
      const o = oe;
      if (n && !g(n, e, o, t, r)) return !1;
      for (let i = t.length - 1; i > 0; i--)
        if (!g(t[i], e, o, t, r)) return !1;
      return !0;
    }
    function m(e, t, n, r) {
      const o = ie,
        i = t[0] || n;
      return g(i, e, o, t, r);
    }
    function v(e, t, n, r) {
      for (var o = ae, i = 1; i < t.length; i++)
        if (!g(t[i], e, o, t, r)) return;
      n && t.length > 0 && g(n, e, o, t, r);
    }
    function g(e, t, n, r, o) {
      const i = z.get(e);
      if (!i) return !0;
      const a = o || s(r, e);
      if (a === e) {
        if (n === oe) return !0;
        n === ae && (n = ie);
      } else if (n === ae && !t.bubbles) return !0;
      if ('relatedTarget' in t) {
        const c = q(t),
          u = c.relatedTarget;
        if (u) {
          if (u instanceof Object && u.addEventListener) {
            const p = V(u);
            var d = l(t, e, p);
            if (d === a) return !0;
          } else d = null;
          Z.set(t, d);
        }
      }
      J.set(t, n);
      const f = t.type;
      let h = !1;
      Y.set(t, a), $.set(t, e), i.depth++;
      for (var w = 0, m = i.length; w < m; w++) {
        const v = i[w];
        if (v.removed) h = !0;
        else if (
          !(v.type !== f || (!v.capture && n === oe) || (v.capture && n === ae))
        )
          try {
            if (
              ('function' == typeof v.handler
                ? v.handler.call(e, t)
                : v.handler.handleEvent(t),
              ee.get(t))
            )
              return !1;
          } catch (g) {
            W || (W = g);
          }
      }
      if ((i.depth--, h && 0 === i.depth)) {
        const b = i.slice();
        i.length = 0;
        for (var w = 0; w < b.length; w++) b[w].removed || i.push(b[w]);
      }
      return !Q.get(t);
    }
    function b(e, t, n) {
      (this.type = e), (this.handler = t), (this.capture = Boolean(n));
    }
    function y(e, t) {
      if (!(e instanceof se)) return V(T(se, 'Event', e, t));
      const n = e;
      return be || 'beforeunload' !== n.type || this instanceof O
        ? void B(n, this)
        : new O(n);
    }
    function E(e) {
      return e && e.relatedTarget
        ? Object.create(e, { relatedTarget: { value: q(e.relatedTarget) } })
        : e;
    }
    function S(e, t, n) {
      const r = window[e],
        o = function (t, n) {
          return t instanceof r ? void B(t, this) : V(T(r, e, t, n));
        };
      if (
        ((o.prototype = Object.create(t.prototype)), n && k(o.prototype, n), r)
      )
        try {
          F(r, o, new r('temp'));
        } catch (i) {
          F(r, o, document.createEvent(e));
        }
      return o;
    }
    function M(e, t) {
      return function () {
        arguments[t] = q(arguments[t]);
        const n = q(this);
        n[e].apply(n, arguments);
      };
    }
    function T(e, t, n, r) {
      if (ve) return new e(n, E(r));
      const o = q(document.createEvent(t)),
        i = me[t],
        a = [n];
      return (
        Object.keys(i).forEach((e) => {
          let t = null != r && e in r ? r[e] : i[e];
          'relatedTarget' === e && (t = q(t)), a.push(t);
        }),
        o['init' + t].apply(o, a),
        o
      );
    }
    function O(e) {
      y.call(this, e);
    }
    function N(e) {
      return 'function' == typeof e || (e && e.handleEvent);
    }
    function j(e) {
      switch (e) {
        case 'DOMAttrModified':
        case 'DOMAttributeNameChanged':
        case 'DOMCharacterDataModified':
        case 'DOMElementNameChanged':
        case 'DOMNodeInserted':
        case 'DOMNodeInsertedIntoDocument':
        case 'DOMNodeRemoved':
        case 'DOMNodeRemovedFromDocument':
        case 'DOMSubtreeModified':
          return !0;
      }
      return !1;
    }
    function L(e) {
      B(e, this);
    }
    function _(e) {
      return e instanceof G.ShadowRoot && (e = e.host), q(e);
    }
    function D(e, t) {
      const n = z.get(e);
      if (n)
        for (let r = 0; r < n.length; r++)
          if (!n[r].removed && n[r].type === t) return !0;
      return !1;
    }
    function C(e, t) {
      for (let n = q(e); n; n = n.parentNode) if (D(V(n), t)) return !0;
      return !1;
    }
    function H(e) {
      I(e, Ee);
    }
    function x(t, n, o, i) {
      e.renderAllPending();
      const a = V(Se.call(U(n), o, i));
      if (!a) return null;
      let c = r(a, null);
      const u = c.lastIndexOf(t);
      return u == -1 ? null : ((c = c.slice(0, u)), s(c, t));
    }
    function R(e) {
      return function () {
        const t = te.get(this);
        return (t && t[e] && t[e].value) || null;
      };
    }
    function P(e) {
      const t = e.slice(2);
      return function (n) {
        let r = te.get(this);
        r || ((r = Object.create(null)), te.set(this, r));
        const o = r[e];
        if (
          (o && this.removeEventListener(t, o.wrapped, !1),
          'function' == typeof n)
        ) {
          const i = function (t) {
            const r = n.call(this, t);
            r === !1
              ? t.preventDefault()
              : 'onbeforeunload' === e &&
                'string' == typeof r &&
                (t.returnValue = r);
          };
          this.addEventListener(t, i, !1), (r[e] = { value: n, wrapped: i });
        }
      };
    }
    var W,
      I = e.forwardMethodsToWrapper,
      A = e.getTreeScope,
      k = e.mixin,
      F = e.registerWrapper,
      B = e.setWrapper,
      U = e.unsafeUnwrap,
      q = e.unwrap,
      V = e.wrap,
      G = e.wrappers,
      z = (new WeakMap(), new WeakMap()),
      X = new WeakMap(),
      K = new WeakMap(),
      Y = new WeakMap(),
      $ = new WeakMap(),
      Z = new WeakMap(),
      J = new WeakMap(),
      Q = new WeakMap(),
      ee = new WeakMap(),
      te = new WeakMap(),
      ne = new WeakMap(),
      re = 0,
      oe = 1,
      ie = 2,
      ae = 3;
    b.prototype = {
      equals(e) {
        return (
          this.handler === e.handler &&
          this.type === e.type &&
          this.capture === e.capture
        );
      },
      get removed() {
        return null === this.handler;
      },
      remove() {
        this.handler = null;
      },
    };
    var se = window.Event;
    (se.prototype.polymerBlackList_ = { returnValue: !0, keyLocation: !0 }),
      (y.prototype = {
        get target() {
          return Y.get(this);
        },
        get currentTarget() {
          return $.get(this);
        },
        get eventPhase() {
          return J.get(this);
        },
        get path() {
          const e = ne.get(this);
          return e ? e.slice() : [];
        },
        stopPropagation() {
          Q.set(this, !0);
        },
        stopImmediatePropagation() {
          Q.set(this, !0), ee.set(this, !0);
        },
      });
    const ce = (() => {
      const e = document.createEvent('Event');
      return (
        e.initEvent('test', !0, !0), e.preventDefault(), e.defaultPrevented
      );
    })();
    ce ||
      (y.prototype.preventDefault = function () {
        this.cancelable &&
          (U(this).preventDefault(),
          Object.defineProperty(this, 'defaultPrevented', {
            get() {
              return !0;
            },
            configurable: !0,
          }));
      }),
      F(se, y, document.createEvent('Event'));
    const ue = S('UIEvent', y);
    const le = S('CustomEvent', y);

    const pe = {
      get relatedTarget() {
        const e = Z.get(this);
        return void 0 !== e ? e : V(q(this).relatedTarget);
      },
    };

    const de = k({ initMouseEvent: M('initMouseEvent', 14) }, pe);
    const fe = k({ initFocusEvent: M('initFocusEvent', 5) }, pe);
    const he = S('MouseEvent', ue, de);
    const we = S('FocusEvent', ue, fe);
    var me = Object.create(null);

    var ve = (() => {
      try {
        new window.FocusEvent('focus');
      } catch (e) {
        return !1;
      }
      return !0;
    })();

    if (!ve) {
      const ge = (e, t, n) => {
        if (n) {
          const r = me[n];
          t = k(k({}, r), t);
        }
        me[e] = t;
      };
      ge('Event', { bubbles: !1, cancelable: !1 }),
        ge('CustomEvent', { detail: null }, 'Event'),
        ge('UIEvent', { view: null, detail: 0 }, 'Event'),
        ge(
          'MouseEvent',
          {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            ctrlKey: !1,
            altKey: !1,
            shiftKey: !1,
            metaKey: !1,
            button: 0,
            relatedTarget: null,
          },
          'UIEvent'
        ),
        ge('FocusEvent', { relatedTarget: null }, 'UIEvent');
    }
    var be = window.BeforeUnloadEvent;
    (O.prototype = Object.create(y.prototype)),
      k(O.prototype, {
        get returnValue() {
          return U(this).returnValue;
        },
        set returnValue(e) {
          U(this).returnValue = e;
        },
      }),
      be && F(be, O);
    const ye = window.EventTarget;
    var Ee = ['addEventListener', 'removeEventListener', 'dispatchEvent'];
    [Node, Window].forEach((e) => {
      const t = e.prototype;
      Ee.forEach((e) => {
        Object.defineProperty(t, e + '_', { value: t[e] });
      });
    }),
      (L.prototype = {
        addEventListener(e, t, n) {
          if (N(t) && !j(e)) {
            const r = new b(e, t, n);
            let o = z.get(this);
            if (o) {
              for (let i = 0; i < o.length; i++) if (r.equals(o[i])) return;
            } else (o = []), (o.depth = 0), z.set(this, o);
            o.push(r);
            const a = _(this);
            a.addEventListener_(e, d, !0);
          }
        },
        removeEventListener(e, t, n) {
          n = Boolean(n);
          const r = z.get(this);
          if (r) {
            for (var o = 0, i = !1, a = 0; a < r.length; a++)
              r[a].type === e &&
                r[a].capture === n &&
                (o++, r[a].handler === t && ((i = !0), r[a].remove()));
            if (i && 1 === o) {
              const s = _(this);
              s.removeEventListener_(e, d, !0);
            }
          }
        },
        dispatchEvent(t) {
          const n = q(t),
            r = n.type;
          X.set(n, !1), e.renderAllPending();
          let o;
          C(this, r) || ((o = () => {}), this.addEventListener(r, o, !0));
          try {
            return q(this).dispatchEvent_(n);
          } finally {
            o && this.removeEventListener(r, o, !0);
          }
        },
      }),
      ye && F(ye, L);
    var Se = document.elementFromPoint;
    (e.elementFromPoint = x),
      (e.getEventHandlerGetter = R),
      (e.getEventHandlerSetter = P),
      (e.wrapEventTargetMethods = H),
      (e.wrappers.BeforeUnloadEvent = O),
      (e.wrappers.CustomEvent = le),
      (e.wrappers.Event = y),
      (e.wrappers.EventTarget = L),
      (e.wrappers.FocusEvent = we),
      (e.wrappers.MouseEvent = he),
      (e.wrappers.UIEvent = ue);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e, t) {
      Object.defineProperty(e, t, w);
    }
    function n(e) {
      u(e, this);
    }
    function r() {
      (this.length = 0), t(this, 'length');
    }
    function o(e) {
      for (var t = new r(), o = 0; o < e.length; o++) t[o] = new n(e[o]);
      return (t.length = o), t;
    }
    function i(e) {
      a.call(this, e);
    }
    var a = e.wrappers.UIEvent;
    const s = e.mixin;
    const c = e.registerWrapper;
    var u = e.setWrapper;
    const l = e.unsafeUnwrap;
    const p = e.wrap;
    const d = window.TouchEvent;
    if (d) {
      let f;
      try {
        f = document.createEvent('TouchEvent');
      } catch (h) {
        return;
      }
      var w = { enumerable: !1 };
      n.prototype = {
        get target() {
          return p(l(this).target);
        },
      };
      const m = { configurable: !0, enumerable: !0, get: null };
      [
        'clientX',
        'clientY',
        'screenX',
        'screenY',
        'pageX',
        'pageY',
        'identifier',
        'webkitRadiusX',
        'webkitRadiusY',
        'webkitRotationAngle',
        'webkitForce',
      ].forEach((e) => {
        (m.get = function () {
          return l(this)[e];
        }),
          Object.defineProperty(n.prototype, e, m);
      }),
        (r.prototype = {
          item(e) {
            return this[e];
          },
        }),
        (i.prototype = Object.create(a.prototype)),
        s(i.prototype, {
          get touches() {
            return o(l(this).touches);
          },
          get targetTouches() {
            return o(l(this).targetTouches);
          },
          get changedTouches() {
            return o(l(this).changedTouches);
          },
          initTouchEvent() {
            throw new Error('Not implemented');
          },
        }),
        c(d, i, f),
        (e.wrappers.Touch = n),
        (e.wrappers.TouchEvent = i),
        (e.wrappers.TouchList = r);
    }
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e, t) {
      Object.defineProperty(e, t, s);
    }
    function n() {
      (this.length = 0), t(this, 'length');
    }
    function r(e) {
      if (null == e) return e;
      for (var t = new n(), r = 0, o = e.length; r < o; r++) t[r] = a(e[r]);
      return (t.length = o), t;
    }
    function o(e, t) {
      e.prototype[t] = function () {
        return r(i(this)[t].apply(i(this), arguments));
      };
    }
    var i = e.unsafeUnwrap,
      a = e.wrap,
      s = { enumerable: !1 };
    (n.prototype = {
      item(e) {
        return this[e];
      },
    }),
      t(n.prototype, 'item'),
      (e.wrappers.NodeList = n),
      (e.addWrapNodeListMethod = o),
      (e.wrapNodeList = r);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    (e.wrapHTMLCollection = e.wrapNodeList),
      (e.wrappers.HTMLCollection = e.wrappers.NodeList);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      N(e instanceof S);
    }
    function n(e) {
      const t = new T();
      return (t[0] = e), (t.length = 1), t;
    }
    function r(e, t, n) {
      L(t, 'childList', {
        removedNodes: n,
        previousSibling: e.previousSibling,
        nextSibling: e.nextSibling,
      });
    }
    function o(e, t) {
      L(e, 'childList', { removedNodes: t });
    }
    function i(e, t, r, o) {
      if (e instanceof DocumentFragment) {
        var i = s(e);
        B = !0;
        for (var a = i.length - 1; a >= 0; a--)
          e.removeChild(i[a]), (i[a].parentNode_ = t);
        B = !1;
        for (var a = 0; a < i.length; a++)
          (i[a].previousSibling_ = i[a - 1] || r),
            (i[a].nextSibling_ = i[a + 1] || o);
        return (
          r && (r.nextSibling_ = i[0]),
          o && (o.previousSibling_ = i[i.length - 1]),
          i
        );
      }
      const i = n(e),
        c = e.parentNode;
      return (
        c && c.removeChild(e),
        (e.parentNode_ = t),
        (e.previousSibling_ = r),
        (e.nextSibling_ = o),
        r && (r.nextSibling_ = e),
        o && (o.previousSibling_ = e),
        i
      );
    }
    function a(e) {
      if (e instanceof DocumentFragment) return s(e);
      const t = n(e),
        o = e.parentNode;
      return o && r(e, o, t), t;
    }
    function s(e) {
      for (var t = new T(), n = 0, r = e.firstChild; r; r = r.nextSibling)
        t[n++] = r;
      return (t.length = n), o(e, t), t;
    }
    function c(e) {
      return e;
    }
    function u(e, t) {
      R(e, t), e.nodeIsInserted_();
    }
    function l(e, t) {
      for (let n = _(t), r = 0; r < e.length; r++) u(e[r], n);
    }
    function p(e) {
      R(e, new O(e, null));
    }
    function d(e) {
      for (let t = 0; t < e.length; t++) p(e[t]);
    }
    function f(e, t) {
      const n = e.nodeType === S.DOCUMENT_NODE ? e : e.ownerDocument;
      n !== t.ownerDocument && n.adoptNode(t);
    }
    function h(t, n) {
      if (n.length) {
        const r = t.ownerDocument;
        if (r !== n[0].ownerDocument)
          for (let o = 0; o < n.length; o++) e.adoptNodeNoRemove(n[o], r);
      }
    }
    function w(e, t) {
      h(e, t);
      const n = t.length;
      if (1 === n) return W(t[0]);
      for (
        var r = W(e.ownerDocument.createDocumentFragment()), o = 0;
        o < n;
        o++
      )
        r.appendChild(W(t[o]));
      return r;
    }
    function m(e) {
      if (void 0 !== e.firstChild_)
        for (let t = e.firstChild_; t; ) {
          const n = t;
          (t = t.nextSibling_),
            (n.parentNode_ = n.previousSibling_ = n.nextSibling_ = void 0);
        }
      e.firstChild_ = e.lastChild_ = void 0;
    }
    function v(e) {
      if (e.invalidateShadowRenderer()) {
        for (let t = e.firstChild; t; ) {
          N(t.parentNode === e);
          var n = t.nextSibling;
          const r = W(t);
          const o = r.parentNode;
          o && Y.call(o, r),
            (t.previousSibling_ = t.nextSibling_ = t.parentNode_ = null),
            (t = n);
        }
        e.firstChild_ = e.lastChild_ = null;
      } else
        for (let n, i = W(e), a = i.firstChild; a; )
          (n = a.nextSibling), Y.call(i, a), (a = n);
    }
    function g(e) {
      const t = e.parentNode;
      return t && t.invalidateShadowRenderer();
    }
    function b(e) {
      for (let t, n = 0; n < e.length; n++)
        (t = e[n]), t.parentNode.removeChild(t);
    }
    function y(e, t, n) {
      let r;
      if (((r = A(n ? U.call(n, P(e), !1) : q.call(P(e), !1))), t)) {
        for (var o = e.firstChild; o; o = o.nextSibling)
          r.appendChild(y(o, !0, n));
        if (e instanceof F.HTMLTemplateElement)
          for (
            const i = r.content, o = e.content.firstChild;
            o;
            o = o.nextSibling
          )
            i.appendChild(y(o, !0, n));
      }
      return r;
    }
    function E(e, t) {
      if (!t || _(e) !== _(t)) return !1;
      for (let n = t; n; n = n.parentNode) if (n === e) return !0;
      return !1;
    }
    function S(e) {
      N(e instanceof V),
        M.call(this, e),
        (this.parentNode_ = void 0),
        (this.firstChild_ = void 0),
        (this.lastChild_ = void 0),
        (this.nextSibling_ = void 0),
        (this.previousSibling_ = void 0),
        (this.treeScope_ = void 0);
    }
    var M = e.wrappers.EventTarget;
    var T = e.wrappers.NodeList;
    var O = e.TreeScope;
    var N = e.assert;
    const j = e.defineWrapGetter;
    var L = e.enqueueMutation;
    var _ = e.getTreeScope;
    const D = e.isWrapper;
    const C = e.mixin;
    const H = e.registerTransientObservers;
    const x = e.registerWrapper;
    var R = e.setTreeScope;
    var P = e.unsafeUnwrap;
    var W = e.unwrap;
    const I = e.unwrapIfNeeded;
    var A = e.wrap;
    const k = e.wrapIfNeeded;
    var F = e.wrappers;
    var B = !1;
    var U = document.importNode;
    var q = window.Node.prototype.cloneNode;
    var V = window.Node;
    const G = window.DocumentFragment;
    const z = (V.prototype.appendChild, V.prototype.compareDocumentPosition);
    const X = V.prototype.isEqualNode;
    const K = V.prototype.insertBefore;
    var Y = V.prototype.removeChild;
    const $ = V.prototype.replaceChild;
    const Z = /Trident|Edge/.test(navigator.userAgent);

    const J = Z
      ? (e, t) => {
          try {
            Y.call(e, t);
          } catch (n) {
            if (!(e instanceof G)) throw n;
          }
        }
      : (e, t) => {
          Y.call(e, t);
        };

    (S.prototype = Object.create(M.prototype)),
      C(S.prototype, {
        appendChild(e) {
          return this.insertBefore(e, null);
        },
        insertBefore(e, n) {
          t(e);
          let r;
          n
            ? D(n)
              ? (r = W(n))
              : ((r = n), (n = A(r)))
            : ((n = null), (r = null)),
            n && N(n.parentNode === this);
          let o;
          const s = n ? n.previousSibling : this.lastChild;
          const c = !this.invalidateShadowRenderer() && !g(e);
          if (((o = c ? a(e) : i(e, this, s, n)), c))
            f(this, e), m(this), K.call(P(this), W(e), r);
          else {
            s || (this.firstChild_ = o[0]),
              n ||
                ((this.lastChild_ = o[o.length - 1]),
                void 0 === this.firstChild_ &&
                  (this.firstChild_ = this.firstChild));
            const u = r ? r.parentNode : P(this);
            u ? K.call(u, w(this, o), r) : h(this, o);
          }
          return (
            L(this, 'childList', {
              addedNodes: o,
              nextSibling: n,
              previousSibling: s,
            }),
            l(o, this),
            e
          );
        },
        removeChild(e) {
          if ((t(e), e.parentNode !== this)) {
            for (
              var r = !1, o = (this.childNodes, this.firstChild);
              o;
              o = o.nextSibling
            )
              if (o === e) {
                r = !0;
                break;
              }
            if (!r) throw new Error('NotFoundError');
          }
          const i = W(e),
            a = e.nextSibling,
            s = e.previousSibling;
          if (this.invalidateShadowRenderer()) {
            const c = this.firstChild,
              u = this.lastChild,
              l = i.parentNode;
            l && J(l, i),
              c === e && (this.firstChild_ = a),
              u === e && (this.lastChild_ = s),
              s && (s.nextSibling_ = a),
              a && (a.previousSibling_ = s),
              (e.previousSibling_ = e.nextSibling_ = e.parentNode_ = void 0);
          } else m(this), J(P(this), i);
          return (
            B ||
              L(this, 'childList', {
                removedNodes: n(e),
                nextSibling: a,
                previousSibling: s,
              }),
            H(this, e),
            e
          );
        },
        replaceChild(e, r) {
          t(e);
          let o;
          if (
            (D(r) ? (o = W(r)) : ((o = r), (r = A(o))), r.parentNode !== this)
          )
            throw new Error('NotFoundError');
          let s;
          let c = r.nextSibling;
          const u = r.previousSibling;
          const d = !this.invalidateShadowRenderer() && !g(e);
          return (
            d
              ? (s = a(e))
              : (c === e && (c = e.nextSibling), (s = i(e, this, u, c))),
            d
              ? (f(this, e), m(this), $.call(P(this), W(e), o))
              : (this.firstChild === r && (this.firstChild_ = s[0]),
                this.lastChild === r && (this.lastChild_ = s[s.length - 1]),
                (r.previousSibling_ = r.nextSibling_ = r.parentNode_ = void 0),
                o.parentNode && $.call(o.parentNode, w(this, s), o)),
            L(this, 'childList', {
              addedNodes: s,
              removedNodes: n(r),
              nextSibling: c,
              previousSibling: u,
            }),
            p(r),
            l(s, this),
            r
          );
        },
        nodeIsInserted_() {
          for (let e = this.firstChild; e; e = e.nextSibling)
            e.nodeIsInserted_();
        },
        hasChildNodes() {
          return null !== this.firstChild;
        },
        get parentNode() {
          return void 0 !== this.parentNode_
            ? this.parentNode_
            : A(P(this).parentNode);
        },
        get firstChild() {
          return void 0 !== this.firstChild_
            ? this.firstChild_
            : A(P(this).firstChild);
        },
        get lastChild() {
          return void 0 !== this.lastChild_
            ? this.lastChild_
            : A(P(this).lastChild);
        },
        get nextSibling() {
          return void 0 !== this.nextSibling_
            ? this.nextSibling_
            : A(P(this).nextSibling);
        },
        get previousSibling() {
          return void 0 !== this.previousSibling_
            ? this.previousSibling_
            : A(P(this).previousSibling);
        },
        get parentElement() {
          for (var e = this.parentNode; e && e.nodeType !== S.ELEMENT_NODE; )
            e = e.parentNode;
          return e;
        },
        get textContent() {
          for (var e = '', t = this.firstChild; t; t = t.nextSibling)
            t.nodeType != S.COMMENT_NODE && (e += t.textContent);
          return e;
        },
        set textContent(e) {
          null == e && (e = '');
          const t = c(this.childNodes);
          if (this.invalidateShadowRenderer()) {
            if ((v(this), '' !== e)) {
              const n = P(this).ownerDocument.createTextNode(e);
              this.appendChild(n);
            }
          } else m(this), (P(this).textContent = e);
          const r = c(this.childNodes);
          L(this, 'childList', { addedNodes: r, removedNodes: t }),
            d(t),
            l(r, this);
        },
        get childNodes() {
          for (
            var e = new T(), t = 0, n = this.firstChild;
            n;
            n = n.nextSibling
          )
            e[t++] = n;
          return (e.length = t), e;
        },
        cloneNode(e) {
          return y(this, e);
        },
        contains(e) {
          return E(this, k(e));
        },
        compareDocumentPosition(e) {
          return z.call(P(this), I(e));
        },
        isEqualNode(e) {
          return X.call(P(this), I(e));
        },
        normalize() {
          for (
            var e, t, n = c(this.childNodes), r = [], o = '', i = 0;
            i < n.length;
            i++
          )
            (t = n[i]),
              t.nodeType === S.TEXT_NODE
                ? e || t.data.length
                  ? e
                    ? ((o += t.data), r.push(t))
                    : (e = t)
                  : this.removeChild(t)
                : (e && r.length && ((e.data += o), b(r)),
                  (r = []),
                  (o = ''),
                  (e = null),
                  t.childNodes.length && t.normalize());
          e && r.length && ((e.data += o), b(r));
        },
      }),
      j(S, 'ownerDocument'),
      x(V, S, document.createDocumentFragment()),
      delete S.prototype.querySelector,
      delete S.prototype.querySelectorAll,
      (S.prototype = C(Object.create(M.prototype), S.prototype)),
      (e.cloneNode = y),
      (e.nodeWasAdded = u),
      (e.nodeWasRemoved = p),
      (e.nodesWereAdded = l),
      (e.nodesWereRemoved = d),
      (e.originalInsertBefore = K),
      (e.originalRemoveChild = Y),
      (e.snapshotNodeList = c),
      (e.wrappers.Node = S);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(t, n, r, o) {
      for (let i = null, a = null, s = 0, c = t.length; s < c; s++)
        (i = b(t[s])),
          (!o && (a = v(i).root) && a instanceof e.wrappers.ShadowRoot) ||
            (r[n++] = i);
      return n;
    }
    function n(e) {
      return String(e).replace(/\/deep\/|::shadow|>>>/g, ' ');
    }
    function r(e) {
      return String(e)
        .replace(/:host\(([^\s]+)\)/g, '$1')
        .replace(/([^\s]):host/g, '$1')
        .replace(':host', '*')
        .replace(
          /\^|\/shadow\/|\/shadow-deep\/|::shadow|\/deep\/|::content|>>>/g,
          ' '
        );
    }
    function o(e, t) {
      for (let n, r = e.firstElementChild; r; ) {
        if (r.matches(t)) return r;
        if ((n = o(r, t))) return n;
        r = r.nextElementSibling;
      }
      return null;
    }
    function i(e, t) {
      return e.matches(t);
    }
    function a(e, t, n) {
      const r = e.localName;
      return r === t || (r === n && e.namespaceURI === D);
    }
    function s() {
      return !0;
    }
    function c(e, t, n) {
      return e.localName === n;
    }
    function u(e, t) {
      return e.namespaceURI === t;
    }
    function l(e, t, n) {
      return e.namespaceURI === t && e.localName === n;
    }
    function p(e, t, n, r, o, i) {
      for (let a = e.firstElementChild; a; )
        r(a, o, i) && (n[t++] = a),
          (t = p(a, t, n, r, o, i)),
          (a = a.nextElementSibling);
      return t;
    }
    function d(n, r, o, i, a) {
      let s;
      const c = g(this);
      const u = v(this).root;
      if (u instanceof e.wrappers.ShadowRoot) return p(this, r, o, n, i, null);
      if (c instanceof L) s = M.call(c, i);
      else {
        if (!(c instanceof _)) return p(this, r, o, n, i, null);
        s = S.call(c, i);
      }
      return t(s, r, o, a);
    }
    function f(n, r, o, i, a) {
      let s;
      const c = g(this);
      const u = v(this).root;
      if (u instanceof e.wrappers.ShadowRoot) return p(this, r, o, n, i, a);
      if (c instanceof L) s = O.call(c, i, a);
      else {
        if (!(c instanceof _)) return p(this, r, o, n, i, a);
        s = T.call(c, i, a);
      }
      return t(s, r, o, !1);
    }
    function h(n, r, o, i, a) {
      let s;
      const c = g(this);
      const u = v(this).root;
      if (u instanceof e.wrappers.ShadowRoot) return p(this, r, o, n, i, a);
      if (c instanceof L) s = j.call(c, i, a);
      else {
        if (!(c instanceof _)) return p(this, r, o, n, i, a);
        s = N.call(c, i, a);
      }
      return t(s, r, o, !1);
    }
    const w = e.wrappers.HTMLCollection;
    const m = e.wrappers.NodeList;
    var v = e.getTreeScope;
    var g = e.unsafeUnwrap;
    var b = e.wrap;
    const y = document.querySelector;
    const E = document.documentElement.querySelector;
    var S = document.querySelectorAll;
    var M = document.documentElement.querySelectorAll;
    var T = document.getElementsByTagName;
    var O = document.documentElement.getElementsByTagName;
    var N = document.getElementsByTagNameNS;
    var j = document.documentElement.getElementsByTagNameNS;
    var L = window.Element;
    var _ = window.HTMLDocument || window.Document;
    var D = 'http://www.w3.org/1999/xhtml';

    const C = {
      querySelector(t) {
        const r = n(t),
          i = r !== t;
        t = r;
        let a;
        const s = g(this);
        let c = v(this).root;
        if (c instanceof e.wrappers.ShadowRoot) return o(this, t);
        if (s instanceof L) a = b(E.call(s, t));
        else {
          if (!(s instanceof _)) return o(this, t);
          a = b(y.call(s, t));
        }
        return a && !i && (c = v(a).root) && c instanceof e.wrappers.ShadowRoot
          ? o(this, t)
          : a;
      },
      querySelectorAll(e) {
        const t = n(e),
          r = t !== e;
        e = t;
        const o = new m();
        return (o.length = d.call(this, i, 0, o, e, r)), o;
      },
    };

    const H = {
      matches(t) {
        return (t = r(t)), e.originalMatches.call(g(this), t);
      },
    };

    const x = {
      getElementsByTagName(e) {
        const t = new w(),
          n = '*' === e ? s : a;
        return (t.length = f.call(this, n, 0, t, e, e.toLowerCase())), t;
      },
      getElementsByClassName(e) {
        return this.querySelectorAll('.' + e);
      },
      getElementsByTagNameNS(e, t) {
        const n = new w();
        let r = null;
        return (
          (r = '*' === e ? ('*' === t ? s : c) : '*' === t ? u : l),
          (n.length = h.call(this, r, 0, n, e || null, t)),
          n
        );
      },
    };

    (e.GetElementsByInterface = x),
      (e.SelectorsInterface = C),
      (e.MatchesInterface = H);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      for (; e && e.nodeType !== Node.ELEMENT_NODE; ) e = e.nextSibling;
      return e;
    }
    function n(e) {
      for (; e && e.nodeType !== Node.ELEMENT_NODE; ) e = e.previousSibling;
      return e;
    }
    const r = e.wrappers.NodeList,
      o = {
        get firstElementChild() {
          return t(this.firstChild);
        },
        get lastElementChild() {
          return n(this.lastChild);
        },
        get childElementCount() {
          for (
            var e = 0, t = this.firstElementChild;
            t;
            t = t.nextElementSibling
          )
            e++;
          return e;
        },
        get children() {
          for (
            var e = new r(), t = 0, n = this.firstElementChild;
            n;
            n = n.nextElementSibling
          )
            e[t++] = n;
          return (e.length = t), e;
        },
        remove() {
          const e = this.parentNode;
          e && e.removeChild(this);
        },
      },
      i = {
        get nextElementSibling() {
          return t(this.nextSibling);
        },
        get previousElementSibling() {
          return n(this.previousSibling);
        },
      },
      a = {
        getElementById(e) {
          return /[ \t\n\r\f]/.test(e)
            ? null
            : this.querySelector('[id="' + e + '"]');
        },
      };
    (e.ChildNodeInterface = i),
      (e.NonElementParentNodeInterface = a),
      (e.ParentNodeInterface = o);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      r.call(this, e);
    }
    const n = e.ChildNodeInterface;
    var r = e.wrappers.Node;
    const o = e.enqueueMutation;
    const i = e.mixin;
    const a = e.registerWrapper;
    const s = e.unsafeUnwrap;
    const c = window.CharacterData;
    (t.prototype = Object.create(r.prototype)),
      i(t.prototype, {
        get nodeValue() {
          return this.data;
        },
        set nodeValue(e) {
          this.data = e;
        },
        get textContent() {
          return this.data;
        },
        set textContent(e) {
          this.data = e;
        },
        get data() {
          return s(this).data;
        },
        set data(e) {
          const t = s(this).data;
          o(this, 'characterData', { oldValue: t }), (s(this).data = e);
        },
      }),
      i(t.prototype, n),
      a(c, t, document.createTextNode('')),
      (e.wrappers.CharacterData = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      return e >>> 0;
    }
    function n(e) {
      r.call(this, e);
    }
    var r = e.wrappers.CharacterData;
    const o = (e.enqueueMutation, e.mixin);
    const i = e.registerWrapper;
    const a = window.Text;
    (n.prototype = Object.create(r.prototype)),
      o(n.prototype, {
        splitText(e) {
          e = t(e);
          const n = this.data;
          if (e > n.length) throw new Error('IndexSizeError');
          const r = n.slice(0, e),
            o = n.slice(e);
          this.data = r;
          const i = this.ownerDocument.createTextNode(o);
          return (
            this.parentNode &&
              this.parentNode.insertBefore(i, this.nextSibling),
            i
          );
        },
      }),
      i(a, n, document.createTextNode('')),
      (e.wrappers.Text = n);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      return i(e).getAttribute('class');
    }
    function n(e, t) {
      a(e, 'attributes', { name: 'class', namespace: null, oldValue: t });
    }
    function r(t) {
      e.invalidateRendererBasedOnAttribute(t, 'class');
    }
    function o(e, o, i) {
      const a = e.ownerElement_;
      if (null == a) return o.apply(e, i);
      const s = t(a),
        c = o.apply(e, i);
      return t(a) !== s && (n(a, s), r(a)), c;
    }
    if (!window.DOMTokenList)
      return void console.warn(
        'Missing DOMTokenList prototype, please include a compatible classList polyfill such as http://goo.gl/uTcepH.'
      );
    var i = e.unsafeUnwrap;
    var a = e.enqueueMutation;
    const s = DOMTokenList.prototype.add;
    DOMTokenList.prototype.add = function () {
      o(this, s, arguments);
    };
    const c = DOMTokenList.prototype.remove;
    DOMTokenList.prototype.remove = function () {
      o(this, c, arguments);
    };
    const u = DOMTokenList.prototype.toggle;
    DOMTokenList.prototype.toggle = function () {
      return o(this, u, arguments);
    };
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(t, n) {
      const r = t.parentNode;
      if (r && r.shadowRoot) {
        const o = e.getRendererForHost(r);
        o.dependsOnAttribute(n) && o.invalidate();
      }
    }
    function n(e, t, n) {
      l(e, 'attributes', { name: t, namespace: null, oldValue: n });
    }
    function r(e) {
      a.call(this, e);
    }
    const o = e.ChildNodeInterface;
    const i = e.GetElementsByInterface;
    var a = e.wrappers.Node;
    const s = e.ParentNodeInterface;
    const c = e.SelectorsInterface;
    const u = e.MatchesInterface;
    var l = (e.addWrapNodeListMethod, e.enqueueMutation);
    const p = e.mixin;
    const d = (e.oneOf, e.registerWrapper);
    const f = e.unsafeUnwrap;
    const h = e.wrappers;
    const w = window.Element;

    const m = [
      'matches',
      'mozMatchesSelector',
      'msMatchesSelector',
      'webkitMatchesSelector',
    ].filter((e) => {
      return w.prototype[e];
    });

    const v = m[0];
    const g = w.prototype[v];
    const b = new WeakMap();
    (r.prototype = Object.create(a.prototype)),
      p(r.prototype, {
        createShadowRoot() {
          const t = new h.ShadowRoot(this);
          f(this).polymerShadowRoot_ = t;
          const n = e.getRendererForHost(this);
          return n.invalidate(), t;
        },
        get shadowRoot() {
          return f(this).polymerShadowRoot_ || null;
        },
        setAttribute(e, r) {
          const o = f(this).getAttribute(e);
          f(this).setAttribute(e, r), n(this, e, o), t(this, e);
        },
        removeAttribute(e) {
          const r = f(this).getAttribute(e);
          f(this).removeAttribute(e), n(this, e, r), t(this, e);
        },
        get classList() {
          let e = b.get(this);
          if (!e) {
            if (((e = f(this).classList), !e)) return;
            (e.ownerElement_ = this), b.set(this, e);
          }
          return e;
        },
        get className() {
          return f(this).className;
        },
        set className(e) {
          this.setAttribute('class', e);
        },
        get id() {
          return f(this).id;
        },
        set id(e) {
          this.setAttribute('id', e);
        },
      }),
      m.forEach((e) => {
        'matches' !== e &&
          (r.prototype[e] = function (e) {
            return this.matches(e);
          });
      }),
      w.prototype.webkitCreateShadowRoot &&
        (r.prototype.webkitCreateShadowRoot = r.prototype.createShadowRoot),
      p(r.prototype, o),
      p(r.prototype, i),
      p(r.prototype, s),
      p(r.prototype, c),
      p(r.prototype, u),
      d(w, r, document.createElementNS(null, 'x')),
      (e.invalidateRendererBasedOnAttribute = t),
      (e.matchesNames = m),
      (e.originalMatches = g),
      (e.wrappers.Element = r);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      switch (e) {
        case '&':
          return '&amp;';
        case '<':
          return '&lt;';
        case '>':
          return '&gt;';
        case '"':
          return '&quot;';
        case ' ':
          return '&nbsp;';
      }
    }
    function n(e) {
      return e.replace(j, t);
    }
    function r(e) {
      return e.replace(L, t);
    }
    function o(e) {
      for (var t = {}, n = 0; n < e.length; n++) t[e[n]] = !0;
      return t;
    }
    function i(e) {
      if (e.namespaceURI !== C) return !0;
      const t = e.ownerDocument.doctype;
      return t && t.publicId && t.systemId;
    }
    function a(e, t) {
      switch (e.nodeType) {
        case Node.ELEMENT_NODE:
          for (
            var o,
              a = e.tagName.toLowerCase(),
              c = '<' + a,
              u = e.attributes,
              l = 0;
            (o = u[l]);
            l++
          )
            c += ' ' + o.name + '="' + n(o.value) + '"';
          return _[a]
            ? (i(e) && (c += '/'), c + '>')
            : c + '>' + s(e) + '</' + a + '>';
        case Node.TEXT_NODE:
          const p = e.data;
          return t && D[t.localName] ? p : r(p);
        case Node.COMMENT_NODE:
          return '<!--' + e.data + '-->';
        default:
          throw (console.error(e), new Error('not implemented'));
      }
    }
    function s(e) {
      e instanceof N.HTMLTemplateElement && (e = e.content);
      for (var t = '', n = e.firstChild; n; n = n.nextSibling) t += a(n, e);
      return t;
    }
    function c(e, t, n) {
      const r = n || 'div';
      e.textContent = '';
      const o = T(e.ownerDocument.createElement(r));
      o.innerHTML = t;
      for (let i; (i = o.firstChild); ) e.appendChild(O(i));
    }
    function u(e) {
      w.call(this, e);
    }
    function l(e, t) {
      const n = T(e.cloneNode(!1));
      n.innerHTML = t;
      for (
        var r, o = T(document.createDocumentFragment());
        (r = n.firstChild);

      )
        o.appendChild(r);
      return O(o);
    }
    function p(t) {
      return function () {
        return e.renderAllPending(), M(this)[t];
      };
    }
    function d(e) {
      m(u, e, p(e));
    }
    function f(t) {
      Object.defineProperty(u.prototype, t, {
        get: p(t),
        set(n) {
          e.renderAllPending(), (M(this)[t] = n);
        },
        configurable: !0,
        enumerable: !0,
      });
    }
    function h(t) {
      Object.defineProperty(u.prototype, t, {
        value() {
          return e.renderAllPending(), M(this)[t].apply(M(this), arguments);
        },
        configurable: !0,
        enumerable: !0,
      });
    }
    var w = e.wrappers.Element;
    var m = e.defineGetter;
    const v = e.enqueueMutation;
    const g = e.mixin;
    const b = e.nodesWereAdded;
    const y = e.nodesWereRemoved;
    const E = e.registerWrapper;
    const S = e.snapshotNodeList;
    var M = e.unsafeUnwrap;
    var T = e.unwrap;
    var O = e.wrap;
    var N = e.wrappers;
    var j = /[&\u00A0"]/g;
    var L = /[&\u00A0<>]/g;

    var _ = o([
      'area',
      'base',
      'br',
      'col',
      'command',
      'embed',
      'hr',
      'img',
      'input',
      'keygen',
      'link',
      'meta',
      'param',
      'source',
      'track',
      'wbr',
    ]);

    var D = o([
      'style',
      'script',
      'xmp',
      'iframe',
      'noembed',
      'noframes',
      'plaintext',
      'noscript',
    ]);

    var C = 'http://www.w3.org/1999/xhtml';
    const H = /MSIE/.test(navigator.userAgent);
    const x = window.HTMLElement;
    const R = window.HTMLTemplateElement;
    (u.prototype = Object.create(w.prototype)),
      g(u.prototype, {
        get innerHTML() {
          return s(this);
        },
        set innerHTML(e) {
          if (H && D[this.localName]) return void (this.textContent = e);
          const t = S(this.childNodes);
          this.invalidateShadowRenderer()
            ? this instanceof N.HTMLTemplateElement
              ? c(this.content, e)
              : c(this, e, this.tagName)
            : !R && this instanceof N.HTMLTemplateElement
            ? c(this.content, e)
            : (M(this).innerHTML = e);
          const n = S(this.childNodes);
          v(this, 'childList', { addedNodes: n, removedNodes: t }),
            y(t),
            b(n, this);
        },
        get outerHTML() {
          return a(this, this.parentNode);
        },
        set outerHTML(e) {
          const t = this.parentNode;
          if (t) {
            t.invalidateShadowRenderer();
            const n = l(t, e);
            t.replaceChild(n, this);
          }
        },
        insertAdjacentHTML(e, t) {
          let n, r;
          switch (String(e).toLowerCase()) {
            case 'beforebegin':
              (n = this.parentNode), (r = this);
              break;
            case 'afterend':
              (n = this.parentNode), (r = this.nextSibling);
              break;
            case 'afterbegin':
              (n = this), (r = this.firstChild);
              break;
            case 'beforeend':
              (n = this), (r = null);
              break;
            default:
              return;
          }
          const o = l(n, t);
          n.insertBefore(o, r);
        },
        get hidden() {
          return this.hasAttribute('hidden');
        },
        set hidden(e) {
          e ? this.setAttribute('hidden', '') : this.removeAttribute('hidden');
        },
      }),
      [
        'clientHeight',
        'clientLeft',
        'clientTop',
        'clientWidth',
        'offsetHeight',
        'offsetLeft',
        'offsetTop',
        'offsetWidth',
        'scrollHeight',
        'scrollWidth',
      ].forEach(d),
      ['scrollLeft', 'scrollTop'].forEach(f),
      [
        'focus',
        'getBoundingClientRect',
        'getClientRects',
        'scrollIntoView',
      ].forEach(h),
      E(x, u, document.createElement('b')),
      (e.wrappers.HTMLElement = u),
      (e.getInnerHTML = s),
      (e.setInnerHTML = c);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.HTMLElement;
    const r = e.mixin;
    const o = e.registerWrapper;
    const i = e.unsafeUnwrap;
    const a = e.wrap;
    const s = window.HTMLCanvasElement;
    (t.prototype = Object.create(n.prototype)),
      r(t.prototype, {
        getContext() {
          const e = i(this).getContext.apply(i(this), arguments);
          return e && a(e);
        },
      }),
      o(s, t, document.createElement('canvas')),
      (e.wrappers.HTMLCanvasElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.HTMLElement;
    const r = e.mixin;
    const o = e.registerWrapper;
    const i = window.HTMLContentElement;
    (t.prototype = Object.create(n.prototype)),
      r(t.prototype, {
        constructor: t,
        get select() {
          return this.getAttribute('select');
        },
        set select(e) {
          this.setAttribute('select', e);
        },
        setAttribute(e, t) {
          n.prototype.setAttribute.call(this, e, t),
            'select' === String(e).toLowerCase() &&
              this.invalidateShadowRenderer(!0);
        },
      }),
      i && o(i, t),
      (e.wrappers.HTMLContentElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.HTMLElement;
    const r = e.mixin;
    const o = e.registerWrapper;
    const i = e.wrapHTMLCollection;
    const a = e.unwrap;
    const s = window.HTMLFormElement;
    (t.prototype = Object.create(n.prototype)),
      r(t.prototype, {
        get elements() {
          return i(a(this).elements);
        },
      }),
      o(s, t, document.createElement('form')),
      (e.wrappers.HTMLFormElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      r.call(this, e);
    }
    function n(e, t) {
      if (!(this instanceof n))
        throw new TypeError(
          'DOM object constructor cannot be called as a function.'
        );
      const o = i(document.createElement('img'));
      r.call(this, o),
        a(o, this),
        void 0 !== e && (o.width = e),
        void 0 !== t && (o.height = t);
    }
    var r = e.wrappers.HTMLElement;
    const o = e.registerWrapper;
    var i = e.unwrap;
    var a = e.rewrap;
    const s = window.HTMLImageElement;
    (t.prototype = Object.create(r.prototype)),
      o(s, t, document.createElement('img')),
      (n.prototype = t.prototype),
      (e.wrappers.HTMLImageElement = t),
      (e.wrappers.Image = n);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.HTMLElement;
    const r = (e.mixin, e.wrappers.NodeList, e.registerWrapper);
    const o = window.HTMLShadowElement;
    (t.prototype = Object.create(n.prototype)),
      (t.prototype.constructor = t),
      o && r(o, t),
      (e.wrappers.HTMLShadowElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      if (!e.defaultView) return e;
      let t = p.get(e);
      if (!t) {
        for (t = e.implementation.createHTMLDocument(''); t.lastChild; )
          t.removeChild(t.lastChild);
        p.set(e, t);
      }
      return t;
    }
    function n(e) {
      for (
        var n, r = t(e.ownerDocument), o = c(r.createDocumentFragment());
        (n = e.firstChild);

      )
        o.appendChild(n);
      return o;
    }
    function r(e) {
      if ((o.call(this, e), !d)) {
        const t = n(e);
        l.set(this, u(t));
      }
    }
    var o = e.wrappers.HTMLElement;
    const i = e.mixin;
    const a = e.registerWrapper;
    const s = e.unsafeUnwrap;
    var c = e.unwrap;
    var u = e.wrap;
    var l = new WeakMap();
    var p = new WeakMap();
    var d = window.HTMLTemplateElement;
    (r.prototype = Object.create(o.prototype)),
      i(r.prototype, {
        constructor: r,
        get content() {
          return d ? u(s(this).content) : l.get(this);
        },
      }),
      d && a(d, r),
      (e.wrappers.HTMLTemplateElement = r);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.HTMLElement;
    const r = e.registerWrapper;
    const o = window.HTMLMediaElement;
    o &&
      ((t.prototype = Object.create(n.prototype)),
      r(o, t, document.createElement('audio')),
      (e.wrappers.HTMLMediaElement = t));
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      r.call(this, e);
    }
    function n(e) {
      if (!(this instanceof n))
        throw new TypeError(
          'DOM object constructor cannot be called as a function.'
        );
      const t = i(document.createElement('audio'));
      r.call(this, t),
        a(t, this),
        t.setAttribute('preload', 'auto'),
        void 0 !== e && t.setAttribute('src', e);
    }
    var r = e.wrappers.HTMLMediaElement;
    const o = e.registerWrapper;
    var i = e.unwrap;
    var a = e.rewrap;
    const s = window.HTMLAudioElement;
    s &&
      ((t.prototype = Object.create(r.prototype)),
      o(s, t, document.createElement('audio')),
      (n.prototype = t.prototype),
      (e.wrappers.HTMLAudioElement = t),
      (e.wrappers.Audio = n));
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      return e.replace(/\s+/g, ' ').trim();
    }
    function n(e) {
      o.call(this, e);
    }
    function r(e, t, n, i) {
      if (!(this instanceof r))
        throw new TypeError(
          'DOM object constructor cannot be called as a function.'
        );
      const a = c(document.createElement('option'));
      o.call(this, a),
        s(a, this),
        void 0 !== e && (a.text = e),
        void 0 !== t && a.setAttribute('value', t),
        n === !0 && a.setAttribute('selected', ''),
        (a.selected = i === !0);
    }
    var o = e.wrappers.HTMLElement;
    const i = e.mixin;
    const a = e.registerWrapper;
    var s = e.rewrap;
    var c = e.unwrap;
    const u = e.wrap;
    const l = window.HTMLOptionElement;
    (n.prototype = Object.create(o.prototype)),
      i(n.prototype, {
        get text() {
          return t(this.textContent);
        },
        set text(e) {
          this.textContent = t(String(e));
        },
        get form() {
          return u(c(this).form);
        },
      }),
      a(l, n, document.createElement('option')),
      (r.prototype = n.prototype),
      (e.wrappers.HTMLOptionElement = n),
      (e.wrappers.Option = r);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.HTMLElement;
    const r = e.mixin;
    const o = e.registerWrapper;
    const i = e.unwrap;
    const a = e.wrap;
    const s = window.HTMLSelectElement;
    (t.prototype = Object.create(n.prototype)),
      r(t.prototype, {
        add(e, t) {
          'object' == typeof t && (t = i(t)), i(this).add(i(e), t);
        },
        remove(e) {
          return void 0 === e
            ? void n.prototype.remove.call(this)
            : ('object' == typeof e && (e = i(e)), void i(this).remove(e));
        },
        get form() {
          return a(i(this).form);
        },
      }),
      o(s, t, document.createElement('select')),
      (e.wrappers.HTMLSelectElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.HTMLElement;
    const r = e.mixin;
    const o = e.registerWrapper;
    const i = e.unwrap;
    const a = e.wrap;
    const s = e.wrapHTMLCollection;
    const c = window.HTMLTableElement;
    (t.prototype = Object.create(n.prototype)),
      r(t.prototype, {
        get caption() {
          return a(i(this).caption);
        },
        createCaption() {
          return a(i(this).createCaption());
        },
        get tHead() {
          return a(i(this).tHead);
        },
        createTHead() {
          return a(i(this).createTHead());
        },
        createTFoot() {
          return a(i(this).createTFoot());
        },
        get tFoot() {
          return a(i(this).tFoot);
        },
        get tBodies() {
          return s(i(this).tBodies);
        },
        createTBody() {
          return a(i(this).createTBody());
        },
        get rows() {
          return s(i(this).rows);
        },
        insertRow(e) {
          return a(i(this).insertRow(e));
        },
      }),
      o(c, t, document.createElement('table')),
      (e.wrappers.HTMLTableElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.HTMLElement;
    const r = e.mixin;
    const o = e.registerWrapper;
    const i = e.wrapHTMLCollection;
    const a = e.unwrap;
    const s = e.wrap;
    const c = window.HTMLTableSectionElement;
    (t.prototype = Object.create(n.prototype)),
      r(t.prototype, {
        constructor: t,
        get rows() {
          return i(a(this).rows);
        },
        insertRow(e) {
          return s(a(this).insertRow(e));
        },
      }),
      o(c, t, document.createElement('thead')),
      (e.wrappers.HTMLTableSectionElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.HTMLElement;
    const r = e.mixin;
    const o = e.registerWrapper;
    const i = e.wrapHTMLCollection;
    const a = e.unwrap;
    const s = e.wrap;
    const c = window.HTMLTableRowElement;
    (t.prototype = Object.create(n.prototype)),
      r(t.prototype, {
        get cells() {
          return i(a(this).cells);
        },
        insertCell(e) {
          return s(a(this).insertCell(e));
        },
      }),
      o(c, t, document.createElement('tr')),
      (e.wrappers.HTMLTableRowElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      switch (e.localName) {
        case 'content':
          return new n(e);
        case 'shadow':
          return new o(e);
        case 'template':
          return new i(e);
      }
      r.call(this, e);
    }
    var n = e.wrappers.HTMLContentElement;
    var r = e.wrappers.HTMLElement;
    var o = e.wrappers.HTMLShadowElement;
    var i = e.wrappers.HTMLTemplateElement;
    const a = (e.mixin, e.registerWrapper);
    const s = window.HTMLUnknownElement;
    (t.prototype = Object.create(r.prototype)),
      a(s, t),
      (e.wrappers.HTMLUnknownElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.Element;
    const r = e.wrappers.HTMLElement;
    const o = e.registerWrapper;
    const i = (e.defineWrapGetter, e.unsafeUnwrap);
    const a = e.wrap;
    const s = e.mixin;
    const c = 'http://www.w3.org/2000/svg';
    const u = window.SVGElement;
    const l = document.createElementNS(c, 'title');
    if (!('classList' in l)) {
      const p = Object.getOwnPropertyDescriptor(n.prototype, 'classList');
      Object.defineProperty(r.prototype, 'classList', p),
        delete n.prototype.classList;
    }
    (t.prototype = Object.create(n.prototype)),
      s(t.prototype, {
        get ownerSVGElement() {
          return a(i(this).ownerSVGElement);
        },
      }),
      o(u, t, document.createElementNS(c, 'title')),
      (e.wrappers.SVGElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      d.call(this, e);
    }
    const n = e.mixin;
    const r = e.registerWrapper;
    const o = e.unwrap;
    const i = e.wrap;
    const a = window.SVGUseElement;
    const s = 'http://www.w3.org/2000/svg';
    const c = i(document.createElementNS(s, 'g'));
    const u = document.createElementNS(s, 'use');
    const l = c.constructor;
    const p = Object.getPrototypeOf(l.prototype);
    var d = p.constructor;
    (t.prototype = Object.create(p)),
      'instanceRoot' in u &&
        n(t.prototype, {
          get instanceRoot() {
            return i(o(this).instanceRoot);
          },
          get animatedInstanceRoot() {
            return i(o(this).animatedInstanceRoot);
          },
        }),
      r(a, t, u),
      (e.wrappers.SVGUseElement = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.EventTarget;
    const r = e.mixin;
    const o = e.registerWrapper;
    const i = e.unsafeUnwrap;
    const a = e.wrap;
    const s = window.SVGElementInstance;
    s &&
      ((t.prototype = Object.create(n.prototype)),
      r(t.prototype, {
        get correspondingElement() {
          return a(i(this).correspondingElement);
        },
        get correspondingUseElement() {
          return a(i(this).correspondingUseElement);
        },
        get parentNode() {
          return a(i(this).parentNode);
        },
        get childNodes() {
          throw new Error('Not implemented');
        },
        get firstChild() {
          return a(i(this).firstChild);
        },
        get lastChild() {
          return a(i(this).lastChild);
        },
        get previousSibling() {
          return a(i(this).previousSibling);
        },
        get nextSibling() {
          return a(i(this).nextSibling);
        },
      }),
      o(s, t),
      (e.wrappers.SVGElementInstance = t));
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      o(e, this);
    }
    const n = e.mixin;
    const r = e.registerWrapper;
    var o = e.setWrapper;
    const i = e.unsafeUnwrap;
    const a = e.unwrap;
    const s = e.unwrapIfNeeded;
    const c = e.wrap;
    const u = window.CanvasRenderingContext2D;
    n(t.prototype, {
      get canvas() {
        return c(i(this).canvas);
      },
      drawImage() {
        (arguments[0] = s(arguments[0])),
          i(this).drawImage.apply(i(this), arguments);
      },
      createPattern() {
        return (
          (arguments[0] = a(arguments[0])),
          i(this).createPattern.apply(i(this), arguments)
        );
      },
    }),
      r(u, t, document.createElement('canvas').getContext('2d')),
      (e.wrappers.CanvasRenderingContext2D = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      i(e, this);
    }
    const n = e.addForwardingProperties;
    const r = e.mixin;
    const o = e.registerWrapper;
    var i = e.setWrapper;
    const a = e.unsafeUnwrap;
    const s = e.unwrapIfNeeded;
    const c = e.wrap;
    const u = window.WebGLRenderingContext;
    if (u) {
      r(t.prototype, {
        get canvas() {
          return c(a(this).canvas);
        },
        texImage2D() {
          (arguments[5] = s(arguments[5])),
            a(this).texImage2D.apply(a(this), arguments);
        },
        texSubImage2D() {
          (arguments[6] = s(arguments[6])),
            a(this).texSubImage2D.apply(a(this), arguments);
        },
      });
      const l = Object.getPrototypeOf(u.prototype);
      l !== Object.prototype && n(l, t.prototype);
      const p = /WebKit/.test(navigator.userAgent)
        ? { drawingBufferHeight: null, drawingBufferWidth: null }
        : {};
      o(u, t, p), (e.wrappers.WebGLRenderingContext = t);
    }
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.Node;
    const r = e.GetElementsByInterface;
    const o = e.NonElementParentNodeInterface;
    const i = e.ParentNodeInterface;
    const a = e.SelectorsInterface;
    const s = e.mixin;
    const c = e.registerObject;
    const u = e.registerWrapper;
    const l = window.DocumentFragment;
    (t.prototype = Object.create(n.prototype)),
      s(t.prototype, i),
      s(t.prototype, a),
      s(t.prototype, r),
      s(t.prototype, o),
      u(l, t, document.createDocumentFragment()),
      (e.wrappers.DocumentFragment = t);
    const p = c(document.createComment(''));
    e.wrappers.Comment = p;
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      const t = p(l(e).ownerDocument.createDocumentFragment());
      n.call(this, t), c(t, this);
      const o = e.shadowRoot;
      h.set(this, o),
        (this.treeScope_ = new r(this, a(o || e))),
        f.set(this, e);
    }
    var n = e.wrappers.DocumentFragment;
    var r = e.TreeScope;
    const o = e.elementFromPoint;
    const i = e.getInnerHTML;
    var a = e.getTreeScope;
    const s = e.mixin;
    var c = e.rewrap;
    const u = e.setInnerHTML;
    var l = e.unsafeUnwrap;
    var p = e.unwrap;
    const d = e.wrap;
    var f = new WeakMap();
    var h = new WeakMap();
    (t.prototype = Object.create(n.prototype)),
      s(t.prototype, {
        constructor: t,
        get innerHTML() {
          return i(this);
        },
        set innerHTML(e) {
          u(this, e), this.invalidateShadowRenderer();
        },
        get olderShadowRoot() {
          return h.get(this) || null;
        },
        get host() {
          return f.get(this) || null;
        },
        invalidateShadowRenderer() {
          return f.get(this).invalidateShadowRenderer();
        },
        elementFromPoint(e, t) {
          return o(this, this.ownerDocument, e, t);
        },
        getSelection() {
          return document.getSelection();
        },
        get activeElement() {
          const e = p(this).ownerDocument.activeElement;
          if (!e || !e.nodeType) return null;
          for (var t = d(e); !this.contains(t); ) {
            for (; t.parentNode; ) t = t.parentNode;
            if (!t.host) return null;
            t = t.host;
          }
          return t;
        },
      }),
      (e.wrappers.ShadowRoot = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      const t = p(e).root;
      return t instanceof f ? t.host : null;
    }
    function n(t, n) {
      if (t.shadowRoot) {
        n = Math.min(t.childNodes.length - 1, n);
        const r = t.childNodes[n];
        if (r) {
          const o = e.getDestinationInsertionPoints(r);
          if (o.length > 0) {
            const i = o[0].parentNode;
            i.nodeType == Node.ELEMENT_NODE && (t = i);
          }
        }
      }
      return t;
    }
    function r(e) {
      return (e = l(e)), t(e) || e;
    }
    function o(e) {
      a(e, this);
    }
    const i = e.registerWrapper;
    var a = e.setWrapper;
    const s = e.unsafeUnwrap;
    const c = e.unwrap;
    const u = e.unwrapIfNeeded;
    var l = e.wrap;
    var p = e.getTreeScope;
    const d = window.Range;
    var f = e.wrappers.ShadowRoot;
    (o.prototype = {
      get startContainer() {
        return r(s(this).startContainer);
      },
      get endContainer() {
        return r(s(this).endContainer);
      },
      get commonAncestorContainer() {
        return r(s(this).commonAncestorContainer);
      },
      setStart(e, t) {
        (e = n(e, t)), s(this).setStart(u(e), t);
      },
      setEnd(e, t) {
        (e = n(e, t)), s(this).setEnd(u(e), t);
      },
      setStartBefore(e) {
        s(this).setStartBefore(u(e));
      },
      setStartAfter(e) {
        s(this).setStartAfter(u(e));
      },
      setEndBefore(e) {
        s(this).setEndBefore(u(e));
      },
      setEndAfter(e) {
        s(this).setEndAfter(u(e));
      },
      selectNode(e) {
        s(this).selectNode(u(e));
      },
      selectNodeContents(e) {
        s(this).selectNodeContents(u(e));
      },
      compareBoundaryPoints(e, t) {
        return s(this).compareBoundaryPoints(e, c(t));
      },
      extractContents() {
        return l(s(this).extractContents());
      },
      cloneContents() {
        return l(s(this).cloneContents());
      },
      insertNode(e) {
        s(this).insertNode(u(e));
      },
      surroundContents(e) {
        s(this).surroundContents(u(e));
      },
      cloneRange() {
        return l(s(this).cloneRange());
      },
      isPointInRange(e, t) {
        return s(this).isPointInRange(u(e), t);
      },
      comparePoint(e, t) {
        return s(this).comparePoint(u(e), t);
      },
      intersectsNode(e) {
        return s(this).intersectsNode(u(e));
      },
      toString() {
        return s(this).toString();
      },
    }),
      d.prototype.createContextualFragment &&
        (o.prototype.createContextualFragment = function (e) {
          return l(s(this).createContextualFragment(e));
        }),
      i(window.Range, o, document.createRange()),
      (e.wrappers.Range = o);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      (e.previousSibling_ = e.previousSibling),
        (e.nextSibling_ = e.nextSibling),
        (e.parentNode_ = e.parentNode);
    }
    function n(n, o, i) {
      const a = x(n),
        s = x(o),
        c = i ? x(i) : null;
      if ((r(o), t(o), i))
        n.firstChild === i && (n.firstChild_ = i),
          (i.previousSibling_ = i.previousSibling);
      else {
        (n.lastChild_ = n.lastChild),
          n.lastChild === n.firstChild && (n.firstChild_ = n.firstChild);
        const u = R(a.lastChild);
        u && (u.nextSibling_ = u.nextSibling);
      }
      e.originalInsertBefore.call(a, s, c);
    }
    function r(n) {
      const r = x(n),
        o = r.parentNode;
      if (o) {
        const i = R(o);
        t(n),
          n.previousSibling && (n.previousSibling.nextSibling_ = n),
          n.nextSibling && (n.nextSibling.previousSibling_ = n),
          i.lastChild === n && (i.lastChild_ = n),
          i.firstChild === n && (i.firstChild_ = n),
          e.originalRemoveChild.call(o, r);
      }
    }
    function o(e) {
      W.set(e, []);
    }
    function i(e) {
      let t = W.get(e);
      return t || W.set(e, (t = [])), t;
    }
    function a(e) {
      for (var t = [], n = 0, r = e.firstChild; r; r = r.nextSibling)
        t[n++] = r;
      return t;
    }
    function s() {
      for (let e = 0; e < F.length; e++) {
        const t = F[e],
          n = t.parentRenderer;
        (n && n.dirty) || t.render();
      }
      F = [];
    }
    function c() {
      (T = null), s();
    }
    function u(e) {
      let t = A.get(e);
      return t || ((t = new f(e)), A.set(e, t)), t;
    }
    function l(e) {
      const t = D(e).root;
      return t instanceof _ ? t : null;
    }
    function p(e) {
      return u(e.host);
    }
    function d(e) {
      (this.skip = !1), (this.node = e), (this.childNodes = []);
    }
    function f(e) {
      (this.host = e),
        (this.dirty = !1),
        this.invalidateAttributes(),
        this.associateNode(e);
    }
    function h(e) {
      for (var t = [], n = e.firstChild; n; n = n.nextSibling)
        E(n) ? t.push.apply(t, i(n)) : t.push(n);
      return t;
    }
    function w(e) {
      if (e instanceof j) return e;
      if (e instanceof N) return null;
      for (let t = e.firstChild; t; t = t.nextSibling) {
        const n = w(t);
        if (n) return n;
      }
      return null;
    }
    function m(e, t) {
      i(t).push(e);
      const n = I.get(e);
      n ? n.push(t) : I.set(e, [t]);
    }
    function v(e) {
      return I.get(e);
    }
    function g(e) {
      I.set(e, void 0);
    }
    function b(e, t) {
      let n = t.getAttribute('select');
      if (!n) return !0;
      if (((n = n.trim()), !n)) return !0;
      if (!(e instanceof O)) return !1;
      if (!U.test(n)) return !1;
      try {
        return e.matches(n);
      } catch (r) {
        return !1;
      }
    }
    function y(e, t) {
      const n = v(t);
      return n && n[n.length - 1] === e;
    }
    function E(e) {
      return e instanceof N || e instanceof j;
    }
    function S(e) {
      return e.shadowRoot;
    }
    function M(e) {
      for (var t = [], n = e.shadowRoot; n; n = n.olderShadowRoot) t.push(n);
      return t;
    }
    var T;
    var O = e.wrappers.Element;
    var N = e.wrappers.HTMLContentElement;
    var j = e.wrappers.HTMLShadowElement;
    const L = e.wrappers.Node;
    var _ = e.wrappers.ShadowRoot;
    var D = (e.assert, e.getTreeScope);
    const C = (e.mixin, e.oneOf);
    const H = e.unsafeUnwrap;
    var x = e.unwrap;
    var R = e.wrap;
    const P = e.ArraySplice;
    var W = new WeakMap();
    var I = new WeakMap();
    var A = new WeakMap();

    const k = C(window, [
      'requestAnimationFrame',
      'mozRequestAnimationFrame',
      'webkitRequestAnimationFrame',
      'setTimeout',
    ]);

    var F = [];
    const B = new P();
    (B.equals = (e, t) => {
      return x(e.node) === t;
    }),
      (d.prototype = {
        append(e) {
          const t = new d(e);
          return this.childNodes.push(t), t;
        },
        sync(e) {
          if (!this.skip) {
            for (
              var t = this.node,
                o = this.childNodes,
                i = a(x(t)),
                s = e || new WeakMap(),
                c = B.calculateSplices(o, i),
                u = 0,
                l = 0,
                p = 0,
                d = 0;
              d < c.length;
              d++
            ) {
              for (var f = c[d]; p < f.index; p++) l++, o[u++].sync(s);
              for (var h = f.removed.length, w = 0; w < h; w++) {
                const m = R(i[l++]);
                s.get(m) || r(m);
              }
              for (
                var v = f.addedCount, g = i[l] && R(i[l]), w = 0;
                w < v;
                w++
              ) {
                const b = o[u++],
                  y = b.node;
                n(t, y, g), s.set(y, !0), b.sync(s);
              }
              p += v;
            }
            for (var d = p; d < o.length; d++) o[d].sync(s);
          }
        },
      }),
      (f.prototype = {
        render(e) {
          if (this.dirty) {
            this.invalidateAttributes();
            const t = this.host;
            this.distribution(t);
            const n = e || new d(t);
            this.buildRenderTree(n, t);
            const r = !e;
            r && n.sync(), (this.dirty = !1);
          }
        },
        get parentRenderer() {
          return D(this.host).renderer;
        },
        invalidate() {
          if (!this.dirty) {
            this.dirty = !0;
            const e = this.parentRenderer;
            if ((e && e.invalidate(), F.push(this), T)) return;
            T = window[k](c, 0);
          }
        },
        distribution(e) {
          this.resetAllSubtrees(e), this.distributionResolution(e);
        },
        resetAll(e) {
          E(e) ? o(e) : g(e), this.resetAllSubtrees(e);
        },
        resetAllSubtrees(e) {
          for (let t = e.firstChild; t; t = t.nextSibling) this.resetAll(t);
          e.shadowRoot && this.resetAll(e.shadowRoot),
            e.olderShadowRoot && this.resetAll(e.olderShadowRoot);
        },
        distributionResolution(e) {
          if (S(e)) {
            for (var t = e, n = h(t), r = M(t), o = 0; o < r.length; o++)
              this.poolDistribution(r[o], n);
            for (var o = r.length - 1; o >= 0; o--) {
              const i = r[o],
                a = w(i);
              if (a) {
                const s = i.olderShadowRoot;
                s && (n = h(s));
                for (let c = 0; c < n.length; c++) m(n[c], a);
              }
              this.distributionResolution(i);
            }
          }
          for (let u = e.firstChild; u; u = u.nextSibling)
            this.distributionResolution(u);
        },
        poolDistribution(e, t) {
          if (!(e instanceof j))
            if (e instanceof N) {
              const n = e;
              this.updateDependentAttributes(n.getAttribute('select'));
              for (var r = !1, o = 0; o < t.length; o++) {
                var e = t[o];
                e && b(e, n) && (m(e, n), (t[o] = void 0), (r = !0));
              }
              if (!r) for (var i = n.firstChild; i; i = i.nextSibling) m(i, n);
            } else
              for (var i = e.firstChild; i; i = i.nextSibling)
                this.poolDistribution(i, t);
        },
        buildRenderTree(e, t) {
          for (let n = this.compose(t), r = 0; r < n.length; r++) {
            const o = n[r],
              i = e.append(o);
            this.buildRenderTree(i, o);
          }
          if (S(t)) {
            const a = u(t);
            a.dirty = !1;
          }
        },
        compose(e) {
          for (
            var t = [], n = e.shadowRoot || e, r = n.firstChild;
            r;
            r = r.nextSibling
          )
            if (E(r)) {
              this.associateNode(n);
              for (let o = i(r), a = 0; a < o.length; a++) {
                const s = o[a];
                y(r, s) && t.push(s);
              }
            } else t.push(r);
          return t;
        },
        invalidateAttributes() {
          this.attributes = Object.create(null);
        },
        updateDependentAttributes(e) {
          if (e) {
            const t = this.attributes;
            /\.\w+/.test(e) && (t['class'] = !0),
              /#\w+/.test(e) && (t.id = !0),
              e.replace(/\[\s*([^\s=\|~\]]+)/g, (e, n) => {
                t[n] = !0;
              });
          }
        },
        dependsOnAttribute(e) {
          return this.attributes[e];
        },
        associateNode(e) {
          H(e).polymerShadowRenderer_ = this;
        },
      });
    var U = /^(:not\()?[*.#[a-zA-Z_|]/;
    (L.prototype.invalidateShadowRenderer = function (e) {
      const t = H(this).polymerShadowRenderer_;
      return !!t && (t.invalidate(), !0);
    }),
      (N.prototype.getDistributedNodes = j.prototype.getDistributedNodes =
        function () {
          return s(), i(this);
        }),
      (O.prototype.getDestinationInsertionPoints = function () {
        return s(), v(this) || [];
      }),
      (N.prototype.nodeIsInserted_ = j.prototype.nodeIsInserted_ =
        function () {
          this.invalidateShadowRenderer();
          let e;
          const t = l(this);
          t && (e = p(t)),
            (H(this).polymerShadowRenderer_ = e),
            e && e.invalidate();
        }),
      (e.getRendererForHost = u),
      (e.getShadowTrees = M),
      (e.renderAllPending = s),
      (e.getDestinationInsertionPoints = v),
      (e.visual = { insertBefore: n, remove: r });
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(t) {
      if (window[t]) {
        r(!e.wrappers[t]);
        const c = function (e) {
          n.call(this, e);
        };
        (c.prototype = Object.create(n.prototype)),
          o(c.prototype, {
            get form() {
              return s(a(this).form);
            },
          }),
          i(window[t], c, document.createElement(t.slice(4, -7))),
          (e.wrappers[t] = c);
      }
    }
    var n = e.wrappers.HTMLElement;
    var r = e.assert;
    var o = e.mixin;
    var i = e.registerWrapper;
    var a = e.unwrap;
    var s = e.wrap;

    const c = [
      'HTMLButtonElement',
      'HTMLFieldSetElement',
      'HTMLInputElement',
      'HTMLKeygenElement',
      'HTMLLabelElement',
      'HTMLLegendElement',
      'HTMLObjectElement',
      'HTMLOutputElement',
      'HTMLTextAreaElement',
    ];

    c.forEach(t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      r(e, this);
    }
    const n = e.registerWrapper;
    var r = e.setWrapper;
    const o = e.unsafeUnwrap;
    const i = e.unwrap;
    const a = e.unwrapIfNeeded;
    const s = e.wrap;
    const c = window.Selection;
    (t.prototype = {
      get anchorNode() {
        return s(o(this).anchorNode);
      },
      get focusNode() {
        return s(o(this).focusNode);
      },
      addRange(e) {
        o(this).addRange(a(e));
      },
      collapse(e, t) {
        o(this).collapse(a(e), t);
      },
      containsNode(e, t) {
        return o(this).containsNode(a(e), t);
      },
      getRangeAt(e) {
        return s(o(this).getRangeAt(e));
      },
      removeRange(e) {
        o(this).removeRange(i(e));
      },
      selectAllChildren(e) {
        o(this).selectAllChildren(e instanceof ShadowRoot ? o(e.host) : a(e));
      },
      toString() {
        return o(this).toString();
      },
    }),
      c.prototype.extend &&
        (t.prototype.extend = function (e, t) {
          o(this).extend(a(e), t);
        }),
      n(window.Selection, t, window.getSelection()),
      (e.wrappers.Selection = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      r(e, this);
    }
    const n = e.registerWrapper;
    var r = e.setWrapper;
    const o = e.unsafeUnwrap;
    const i = e.unwrapIfNeeded;
    const a = e.wrap;
    const s = window.TreeWalker;
    (t.prototype = {
      get root() {
        return a(o(this).root);
      },
      get currentNode() {
        return a(o(this).currentNode);
      },
      set currentNode(e) {
        o(this).currentNode = i(e);
      },
      get filter() {
        return o(this).filter;
      },
      parentNode() {
        return a(o(this).parentNode());
      },
      firstChild() {
        return a(o(this).firstChild());
      },
      lastChild() {
        return a(o(this).lastChild());
      },
      previousSibling() {
        return a(o(this).previousSibling());
      },
      previousNode() {
        return a(o(this).previousNode());
      },
      nextNode() {
        return a(o(this).nextNode());
      },
    }),
      n(s, t),
      (e.wrappers.TreeWalker = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      l.call(this, e), (this.treeScope_ = new m(this, null));
    }
    function n(e) {
      const n = document[e];
      t.prototype[e] = function () {
        return D(n.apply(L(this), arguments));
      };
    }
    function r(e, t) {
      x.call(L(t), _(e)), o(e, t);
    }
    function o(e, t) {
      e.shadowRoot && t.adoptNode(e.shadowRoot), e instanceof w && i(e, t);
      for (let n = e.firstChild; n; n = n.nextSibling) o(n, t);
    }
    function i(e, t) {
      const n = e.olderShadowRoot;
      n && t.adoptNode(n);
    }
    function a(e) {
      j(e, this);
    }
    function s(e, t) {
      const n = document.implementation[t];
      e.prototype[t] = function () {
        return D(n.apply(L(this), arguments));
      };
    }
    function c(e, t) {
      const n = document.implementation[t];
      e.prototype[t] = function () {
        return n.apply(L(this), arguments);
      };
    }
    const u = e.GetElementsByInterface;
    var l = e.wrappers.Node;
    const p = e.ParentNodeInterface;
    const d = e.NonElementParentNodeInterface;
    const f = e.wrappers.Selection;
    const h = e.SelectorsInterface;
    var w = e.wrappers.ShadowRoot;
    var m = e.TreeScope;
    const v = e.cloneNode;
    const g = e.defineGetter;
    const b = e.defineWrapGetter;
    const y = e.elementFromPoint;
    const E = e.forwardMethodsToWrapper;
    const S = e.matchesNames;
    const M = e.mixin;
    const T = e.registerWrapper;
    const O = e.renderAllPending;
    const N = e.rewrap;
    var j = e.setWrapper;
    var L = e.unsafeUnwrap;
    var _ = e.unwrap;
    var D = e.wrap;
    const C = e.wrapEventTargetMethods;
    const H = (e.wrapNodeList, new WeakMap());
    (t.prototype = Object.create(l.prototype)),
      b(t, 'documentElement'),
      b(t, 'body'),
      b(t, 'head'),
      g(t, 'activeElement', function () {
        const e = _(this).activeElement;
        if (!e || !e.nodeType) return null;
        for (var t = D(e); !this.contains(t); ) {
          for (; t.parentNode; ) t = t.parentNode;
          if (!t.host) return null;
          t = t.host;
        }
        return t;
      }),
      [
        'createComment',
        'createDocumentFragment',
        'createElement',
        'createElementNS',
        'createEvent',
        'createEventNS',
        'createRange',
        'createTextNode',
      ].forEach(n);
    var x = document.adoptNode;
    const R = document.getSelection;
    M(t.prototype, {
      adoptNode(e) {
        return e.parentNode && e.parentNode.removeChild(e), r(e, this), e;
      },
      elementFromPoint(e, t) {
        return y(this, this, e, t);
      },
      importNode(e, t) {
        return v(e, t, L(this));
      },
      getSelection() {
        return O(), new f(R.call(_(this)));
      },
      getElementsByName(e) {
        return h.querySelectorAll.call(
          this,
          '[name=' + JSON.stringify(String(e)) + ']'
        );
      },
    });
    const P = document.createTreeWalker,
      W = e.wrappers.TreeWalker;
    if (
      ((t.prototype.createTreeWalker = function (e, t, n, r) {
        let o = null;
        return (
          n &&
            (n.acceptNode && 'function' == typeof n.acceptNode
              ? (o = {
                  acceptNode(e) {
                    return n.acceptNode(D(e));
                  },
                })
              : 'function' == typeof n &&
                (o = (e) => {
                  return n(D(e));
                })),
          new W(P.call(_(this), _(e), t, o, r))
        );
      }),
      document.registerElement)
    ) {
      const I = document.registerElement;
      (t.prototype.registerElement = function (t, n) {
        function r(e) {
          return e
            ? void j(e, this)
            : i
            ? document.createElement(i, t)
            : document.createElement(t);
        }
        let o;
        var i;
        if (
          (void 0 !== n && ((o = n.prototype), (i = n['extends'])),
          o || (o = Object.create(HTMLElement.prototype)),
          e.nativePrototypeTable.get(o))
        )
          throw new Error('NotSupportedError');
        for (
          var a, s = Object.getPrototypeOf(o), c = [];
          s && !(a = e.nativePrototypeTable.get(s));

        )
          c.push(s), (s = Object.getPrototypeOf(s));
        if (!a) throw new Error('NotSupportedError');
        for (var u = Object.create(a), l = c.length - 1; l >= 0; l--)
          u = Object.create(u);
        [
          'createdCallback',
          'attachedCallback',
          'detachedCallback',
          'attributeChangedCallback',
        ].forEach((e) => {
          const t = o[e];
          t &&
            (u[e] = function () {
              D(this) instanceof r || N(this), t.apply(D(this), arguments);
            });
        });
        const p = { prototype: u };
        i && (p['extends'] = i),
          (r.prototype = o),
          (r.prototype.constructor = r),
          e.constructorTable.set(u, r),
          e.nativePrototypeTable.set(o, u);
        I.call(_(this), t, p);
        return r;
      }),
        E([window.HTMLDocument || window.Document], ['registerElement']);
    }
    E(
      [
        window.HTMLBodyElement,
        window.HTMLDocument || window.Document,
        window.HTMLHeadElement,
        window.HTMLHtmlElement,
      ],
      [
        'appendChild',
        'compareDocumentPosition',
        'contains',
        'getElementsByClassName',
        'getElementsByTagName',
        'getElementsByTagNameNS',
        'insertBefore',
        'querySelector',
        'querySelectorAll',
        'removeChild',
        'replaceChild',
      ]
    ),
      E(
        [
          window.HTMLBodyElement,
          window.HTMLHeadElement,
          window.HTMLHtmlElement,
        ],
        S
      ),
      E(
        [window.HTMLDocument || window.Document],
        [
          'adoptNode',
          'importNode',
          'contains',
          'createComment',
          'createDocumentFragment',
          'createElement',
          'createElementNS',
          'createEvent',
          'createEventNS',
          'createRange',
          'createTextNode',
          'createTreeWalker',
          'elementFromPoint',
          'getElementById',
          'getElementsByName',
          'getSelection',
        ]
      ),
      M(t.prototype, u),
      M(t.prototype, p),
      M(t.prototype, h),
      M(t.prototype, d),
      M(t.prototype, {
        get implementation() {
          let e = H.get(this);
          return e
            ? e
            : ((e = new a(_(this).implementation)), H.set(this, e), e);
        },
        get defaultView() {
          return D(_(this).defaultView);
        },
      }),
      T(window.Document, t, document.implementation.createHTMLDocument('')),
      window.HTMLDocument && T(window.HTMLDocument, t),
      C([
        window.HTMLBodyElement,
        window.HTMLDocument || window.Document,
        window.HTMLHeadElement,
      ]);
    const A = document.implementation.createDocument;
    (a.prototype.createDocument = function () {
      return (arguments[2] = _(arguments[2])), D(A.apply(L(this), arguments));
    }),
      s(a, 'createDocumentType'),
      s(a, 'createHTMLDocument'),
      c(a, 'hasFeature'),
      T(window.DOMImplementation, a),
      E(
        [window.DOMImplementation],
        [
          'createDocument',
          'createDocumentType',
          'createHTMLDocument',
          'hasFeature',
        ]
      ),
      (e.adoptNodeNoRemove = r),
      (e.wrappers.DOMImplementation = a),
      (e.wrappers.Document = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      n.call(this, e);
    }
    var n = e.wrappers.EventTarget;
    const r = e.wrappers.Selection;
    const o = e.mixin;
    const i = e.registerWrapper;
    const a = e.renderAllPending;
    const s = e.unwrap;
    const c = e.unwrapIfNeeded;
    const u = e.wrap;
    const l = window.Window;
    const p = window.getComputedStyle;
    const d = window.getDefaultComputedStyle;
    const f = window.getSelection;
    (t.prototype = Object.create(n.prototype)),
      (l.prototype.getComputedStyle = function (e, t) {
        return u(this || window).getComputedStyle(c(e), t);
      }),
      d &&
        (l.prototype.getDefaultComputedStyle = function (e, t) {
          return u(this || window).getDefaultComputedStyle(c(e), t);
        }),
      (l.prototype.getSelection = function () {
        return u(this || window).getSelection();
      }),
      delete window.getComputedStyle,
      delete window.getDefaultComputedStyle,
      delete window.getSelection,
      ['addEventListener', 'removeEventListener', 'dispatchEvent'].forEach(
        (e) => {
          (l.prototype[e] = function () {
            const t = u(this || window);
            return t[e].apply(t, arguments);
          }),
            delete window[e];
        }
      ),
      o(t.prototype, {
        getComputedStyle(e, t) {
          return a(), p.call(s(this), c(e), t);
        },
        getSelection() {
          return a(), new r(f.call(s(this)));
        },
        get document() {
          return u(s(this).document);
        },
      }),
      d &&
        (t.prototype.getDefaultComputedStyle = function (e, t) {
          return a(), d.call(s(this), c(e), t);
        }),
      i(l, t, window),
      (e.wrappers.Window = t);
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    const t = e.unwrap,
      n = window.DataTransfer || window.Clipboard,
      r = n.prototype.setDragImage;
    r &&
      (n.prototype.setDragImage = function (e, n, o) {
        r.call(this, t(e), n, o);
      });
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      let t;
      (t = e instanceof i ? e : new i(e && o(e))), r(t, this);
    }
    const n = e.registerWrapper;
    var r = e.setWrapper;
    var o = e.unwrap;
    var i = window.FormData;
    i && (n(i, t, new i()), (e.wrappers.FormData = t));
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    const t = e.unwrapIfNeeded,
      n = XMLHttpRequest.prototype.send;
    XMLHttpRequest.prototype.send = function (e) {
      return n.call(this, t(e));
    };
  })(window.ShadowDOMPolyfill),
  ((e) => {
    'use strict';
    function t(e) {
      const t = n[e],
        r = window[t];
      if (r) {
        const o = document.createElement(e),
          i = o.constructor;
        window[t] = i;
      }
    }
    var n =
      (e.isWrapperFor,
      {
        a: 'HTMLAnchorElement',
        area: 'HTMLAreaElement',
        audio: 'HTMLAudioElement',
        base: 'HTMLBaseElement',
        body: 'HTMLBodyElement',
        br: 'HTMLBRElement',
        button: 'HTMLButtonElement',
        canvas: 'HTMLCanvasElement',
        caption: 'HTMLTableCaptionElement',
        col: 'HTMLTableColElement',
        content: 'HTMLContentElement',
        data: 'HTMLDataElement',
        datalist: 'HTMLDataListElement',
        del: 'HTMLModElement',
        dir: 'HTMLDirectoryElement',
        div: 'HTMLDivElement',
        dl: 'HTMLDListElement',
        embed: 'HTMLEmbedElement',
        fieldset: 'HTMLFieldSetElement',
        font: 'HTMLFontElement',
        form: 'HTMLFormElement',
        frame: 'HTMLFrameElement',
        frameset: 'HTMLFrameSetElement',
        h1: 'HTMLHeadingElement',
        head: 'HTMLHeadElement',
        hr: 'HTMLHRElement',
        html: 'HTMLHtmlElement',
        iframe: 'HTMLIFrameElement',
        img: 'HTMLImageElement',
        input: 'HTMLInputElement',
        keygen: 'HTMLKeygenElement',
        label: 'HTMLLabelElement',
        legend: 'HTMLLegendElement',
        li: 'HTMLLIElement',
        link: 'HTMLLinkElement',
        map: 'HTMLMapElement',
        marquee: 'HTMLMarqueeElement',
        menu: 'HTMLMenuElement',
        menuitem: 'HTMLMenuItemElement',
        meta: 'HTMLMetaElement',
        meter: 'HTMLMeterElement',
        object: 'HTMLObjectElement',
        ol: 'HTMLOListElement',
        optgroup: 'HTMLOptGroupElement',
        option: 'HTMLOptionElement',
        output: 'HTMLOutputElement',
        p: 'HTMLParagraphElement',
        param: 'HTMLParamElement',
        pre: 'HTMLPreElement',
        progress: 'HTMLProgressElement',
        q: 'HTMLQuoteElement',
        script: 'HTMLScriptElement',
        select: 'HTMLSelectElement',
        shadow: 'HTMLShadowElement',
        source: 'HTMLSourceElement',
        span: 'HTMLSpanElement',
        style: 'HTMLStyleElement',
        table: 'HTMLTableElement',
        tbody: 'HTMLTableSectionElement',
        template: 'HTMLTemplateElement',
        textarea: 'HTMLTextAreaElement',
        thead: 'HTMLTableSectionElement',
        time: 'HTMLTimeElement',
        title: 'HTMLTitleElement',
        tr: 'HTMLTableRowElement',
        track: 'HTMLTrackElement',
        ul: 'HTMLUListElement',
        video: 'HTMLVideoElement',
      });
    Object.keys(n).forEach(t),
      Object.getOwnPropertyNames(e.wrappers).forEach((t) => {
        window[t] = e.wrappers[t];
      });
  })(window.ShadowDOMPolyfill);
