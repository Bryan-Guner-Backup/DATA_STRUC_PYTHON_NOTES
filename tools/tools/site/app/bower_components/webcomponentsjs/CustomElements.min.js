/**
 * @license
 * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
// @version 0.7.24
"undefined" == typeof WeakMap &&
  !(() => {
    const e = Object.defineProperty;
    let t = Date.now() % 1e9;

    const n = function () {
      this.name = "__st" + ((1e9 * Math.random()) >>> 0) + (t++ + "__");
    };

    (n.prototype = {
      set(t, n) {
        const o = t[this.name];
        return (
          o && o[0] === t
            ? (o[1] = n)
            : e(t, this.name, { value: [t, n], writable: !0 }),
          this
        );
      },
      get(e) {
        let t;
        return (t = e[this.name]) && t[0] === e ? t[1] : void 0;
      },
      delete(e) {
        const t = e[this.name];
        return !(!t || t[0] !== e) && ((t[0] = t[1] = void 0), !0);
      },
      has(e) {
        const t = e[this.name];
        return !!t && t[0] === e;
      },
    }),
      (window.WeakMap = n);
  })(),
  ((e) => {
    function t(e) {
      E.push(e), b || ((b = !0), m(o));
    }
    function n(e) {
      return (
        (window.ShadowDOMPolyfill &&
          window.ShadowDOMPolyfill.wrapIfNeeded(e)) ||
        e
      );
    }
    function o() {
      b = !1;
      const e = E;
      (E = []),
        e.sort((e, t) => {
          return e.uid_ - t.uid_;
        });
      let t = !1;
      e.forEach((e) => {
        const n = e.takeRecords();
        r(e), n.length && (e.callback_(n, e), (t = !0));
      }),
        t && o();
    }
    function r(e) {
      e.nodes_.forEach((t) => {
        const n = v.get(t);
        n &&
          n.forEach((t) => {
            t.observer === e && t.removeTransientObservers();
          });
      });
    }
    function i(e, t) {
      for (let n = e; n; n = n.parentNode) {
        const o = v.get(n);
        if (o)
          for (let r = 0; r < o.length; r++) {
            const i = o[r],
              a = i.options;
            if (n === e || a.subtree) {
              const d = t(a);
              d && i.enqueue(d);
            }
          }
      }
    }
    function a(e) {
      (this.callback_ = e),
        (this.nodes_ = []),
        (this.records_ = []),
        (this.uid_ = ++_);
    }
    function d(e, t) {
      (this.type = e),
        (this.target = t),
        (this.addedNodes = []),
        (this.removedNodes = []),
        (this.previousSibling = null),
        (this.nextSibling = null),
        (this.attributeName = null),
        (this.attributeNamespace = null),
        (this.oldValue = null);
    }
    function s(e) {
      const t = new d(e.type, e.target);
      return (
        (t.addedNodes = e.addedNodes.slice()),
        (t.removedNodes = e.removedNodes.slice()),
        (t.previousSibling = e.previousSibling),
        (t.nextSibling = e.nextSibling),
        (t.attributeName = e.attributeName),
        (t.attributeNamespace = e.attributeNamespace),
        (t.oldValue = e.oldValue),
        t
      );
    }
    function u(e, t) {
      return (y = new d(e, t));
    }
    function c(e) {
      return N ? N : ((N = s(y)), (N.oldValue = e), N);
    }
    function l() {
      y = N = void 0;
    }
    function f(e) {
      return e === N || e === y;
    }
    function p(e, t) {
      return e === t ? e : N && f(e) ? N : null;
    }
    function w(e, t, n) {
      (this.observer = e),
        (this.target = t),
        (this.options = n),
        (this.transientObservedNodes = []);
    }
    if (!e.JsMutationObserver) {
      var m,
        v = new WeakMap();
      if (/Trident|Edge/.test(navigator.userAgent)) m = setTimeout;
      else if (window.setImmediate) m = window.setImmediate;
      else {
        let h = [];
        const g = String(Math.random());
        window.addEventListener("message", (e) => {
          if (e.data === g) {
            const t = h;
            (h = []),
              t.forEach((e) => {
                e();
              });
          }
        }),
          (m = (e) => {
            h.push(e), window.postMessage(g, "*");
          });
      }
      var b = !1,
        E = [],
        _ = 0;
      a.prototype = {
        observe(e, t) {
          if (
            ((e = n(e)),
            (!t.childList && !t.attributes && !t.characterData) ||
              (t.attributeOldValue && !t.attributes) ||
              (t.attributeFilter &&
                t.attributeFilter.length &&
                !t.attributes) ||
              (t.characterDataOldValue && !t.characterData))
          )
            throw new SyntaxError();
          let o = v.get(e);
          o || v.set(e, (o = []));
          for (var r, i = 0; i < o.length; i++)
            if (o[i].observer === this) {
              (r = o[i]), r.removeListeners(), (r.options = t);
              break;
            }
          r || ((r = new w(this, e, t)), o.push(r), this.nodes_.push(e)),
            r.addListeners();
        },
        disconnect() {
          this.nodes_.forEach(function (e) {
            for (let t = v.get(e), n = 0; n < t.length; n++) {
              const o = t[n];
              if (o.observer === this) {
                o.removeListeners(), t.splice(n, 1);
                break;
              }
            }
          }, this),
            (this.records_ = []);
        },
        takeRecords() {
          const e = this.records_;
          return (this.records_ = []), e;
        },
      };
      var y, N;
      (w.prototype = {
        enqueue(e) {
          const n = this.observer.records_,
            o = n.length;
          if (n.length > 0) {
            const r = n[o - 1],
              i = p(r, e);
            if (i) return void (n[o - 1] = i);
          } else t(this.observer);
          n[o] = e;
        },
        addListeners() {
          this.addListeners_(this.target);
        },
        addListeners_(e) {
          const t = this.options;
          t.attributes && e.addEventListener("DOMAttrModified", this, !0),
            t.characterData &&
              e.addEventListener("DOMCharacterDataModified", this, !0),
            t.childList && e.addEventListener("DOMNodeInserted", this, !0),
            (t.childList || t.subtree) &&
              e.addEventListener("DOMNodeRemoved", this, !0);
        },
        removeListeners() {
          this.removeListeners_(this.target);
        },
        removeListeners_(e) {
          const t = this.options;
          t.attributes && e.removeEventListener("DOMAttrModified", this, !0),
            t.characterData &&
              e.removeEventListener("DOMCharacterDataModified", this, !0),
            t.childList && e.removeEventListener("DOMNodeInserted", this, !0),
            (t.childList || t.subtree) &&
              e.removeEventListener("DOMNodeRemoved", this, !0);
        },
        addTransientObserver(e) {
          if (e !== this.target) {
            this.addListeners_(e), this.transientObservedNodes.push(e);
            let t = v.get(e);
            t || v.set(e, (t = [])), t.push(this);
          }
        },
        removeTransientObservers() {
          const e = this.transientObservedNodes;
          (this.transientObservedNodes = []),
            e.forEach(function (e) {
              this.removeListeners_(e);
              for (let t = v.get(e), n = 0; n < t.length; n++)
                if (t[n] === this) {
                  t.splice(n, 1);
                  break;
                }
            }, this);
        },
        handleEvent(e) {
          switch ((e.stopImmediatePropagation(), e.type)) {
            case "DOMAttrModified":
              const t = e.attrName;
              const n = e.relatedNode.namespaceURI;
              var o = e.target;
              var r = new u("attributes", o);
              (r.attributeName = t), (r.attributeNamespace = n);
              var a =
                e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;
              i(o, (e) => {
                if (
                  e.attributes &&
                  (!e.attributeFilter ||
                    !e.attributeFilter.length ||
                    e.attributeFilter.indexOf(t) !== -1 ||
                    e.attributeFilter.indexOf(n) !== -1)
                )
                  return e.attributeOldValue ? c(a) : r;
              });
              break;
            case "DOMCharacterDataModified":
              var o = e.target,
                r = u("characterData", o),
                a = e.prevValue;
              i(o, (e) => {
                if (e.characterData) return e.characterDataOldValue ? c(a) : r;
              });
              break;
            case "DOMNodeRemoved":
              this.addTransientObserver(e.target);
            case "DOMNodeInserted":
              let d;
              let s;
              const f = e.target;
              "DOMNodeInserted" === e.type
                ? ((d = [f]), (s = []))
                : ((d = []), (s = [f]));
              const p = f.previousSibling,
                w = f.nextSibling,
                r = u("childList", e.target.parentNode);
              (r.addedNodes = d),
                (r.removedNodes = s),
                (r.previousSibling = p),
                (r.nextSibling = w),
                i(e.relatedNode, (e) => {
                  if (e.childList) return r;
                });
          }
          l();
        },
      }),
        (e.JsMutationObserver = a),
        e.MutationObserver ||
          ((e.MutationObserver = a), (a._isPolyfilled = !0));
    }
  })(self),
  ((e) => {
    "use strict";
    if (!window.performance || !window.performance.now) {
      const t = Date.now();
      window.performance = {
        now() {
          return Date.now() - t;
        },
      };
    }
    window.requestAnimationFrame ||
      (window.requestAnimationFrame = (() => {
        const e =
          window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;
        return e
          ? (t) => {
              return e(() => {
                t(performance.now());
              });
            }
          : (e) => {
              return window.setTimeout(e, 1e3 / 60);
            };
      })()),
      window.cancelAnimationFrame ||
        (window.cancelAnimationFrame = (() => {
          return (
            window.webkitCancelAnimationFrame ||
            window.mozCancelAnimationFrame ||
            ((e) => {
              clearTimeout(e);
            })
          );
        })());
    const n = (() => {
      const e = document.createEvent("Event");
      return e.initEvent("foo", !0, !0), e.preventDefault(), e.defaultPrevented;
    })();
    if (!n) {
      const o = Event.prototype.preventDefault;
      Event.prototype.preventDefault = function () {
        this.cancelable &&
          (o.call(this),
          Object.defineProperty(this, "defaultPrevented", {
            get() {
              return !0;
            },
            configurable: !0,
          }));
      };
    }
    const r = /Trident/.test(navigator.userAgent);
    if (
      ((!window.CustomEvent ||
        (r && "function" != typeof window.CustomEvent)) &&
        ((window.CustomEvent = (e, t) => {
          t = t || {};
          const n = document.createEvent("CustomEvent");
          return (
            n.initCustomEvent(
              e,
              Boolean(t.bubbles),
              Boolean(t.cancelable),
              t.detail
            ),
            n
          );
        }),
        (window.CustomEvent.prototype = window.Event.prototype)),
      !window.Event || (r && "function" != typeof window.Event))
    ) {
      const i = window.Event;
      (window.Event = (e, t) => {
        t = t || {};
        const n = document.createEvent("Event");
        return n.initEvent(e, Boolean(t.bubbles), Boolean(t.cancelable)), n;
      }),
        (window.Event.prototype = i.prototype);
    }
  })(window.WebComponents),
  (window.CustomElements = window.CustomElements || { flags: {} }),
  ((e) => {
    const t = e.flags,
      n = [],
      o = (e) => {
        n.push(e);
      },
      r = () => {
        n.forEach((t) => {
          t(e);
        });
      };
    (e.addModule = o),
      (e.initializeModules = r),
      (e.hasNative = Boolean(document.registerElement)),
      (e.isIE = /Trident/.test(navigator.userAgent)),
      (e.useNative =
        !t.register &&
        e.hasNative &&
        !window.ShadowDOMPolyfill &&
        (!window.HTMLImports || window.HTMLImports.useNative));
  })(window.CustomElements),
  window.CustomElements.addModule((e) => {
    function t(e, t) {
      n(e, (e) => {
        return !!t(e) || void o(e, t);
      }),
        o(e, t);
    }
    function n(e, t, o) {
      let r = e.firstElementChild;
      if (!r)
        for (r = e.firstChild; r && r.nodeType !== Node.ELEMENT_NODE; )
          r = r.nextSibling;
      for (; r; ) t(r, o) !== !0 && n(r, t, o), (r = r.nextElementSibling);
      return null;
    }
    function o(e, n) {
      for (let o = e.shadowRoot; o; ) t(o, n), (o = o.olderShadowRoot);
    }
    function r(e, t) {
      i(e, t, []);
    }
    function i(e, t, n) {
      if (((e = window.wrap(e)), !(n.indexOf(e) >= 0))) {
        n.push(e);
        for (
          let o,
            r = e.querySelectorAll("link[rel=" + a + "]"),
            d = 0,
            s = r.length;
          d < s && (o = r[d]);
          d++
        )
          o["import"] && i(o["import"], t, n);
        t(e);
      }
    }
    var a = window.HTMLImports ? window.HTMLImports.IMPORT_LINK_TYPE : "none";
    (e.forDocumentTree = r), (e.forSubtree = t);
  }),
  window.CustomElements.addModule((e) => {
    function t(e, t) {
      return n(e, t) || o(e, t);
    }
    function n(t, n) {
      return !!e.upgrade(t, n) || void (n && a(t));
    }
    function o(e, t) {
      b(e, (e) => {
        if (n(e, t)) return !0;
      });
    }
    function r(e) {
      N.push(e), y || ((y = !0), setTimeout(i));
    }
    function i() {
      y = !1;
      for (let e, t = N, n = 0, o = t.length; n < o && (e = t[n]); n++) e();
      N = [];
    }
    function a(e) {
      _
        ? r(() => {
            d(e);
          })
        : d(e);
    }
    function d(e) {
      e.__upgraded__ &&
        !e.__attached &&
        ((e.__attached = !0), e.attachedCallback && e.attachedCallback());
    }
    function s(e) {
      u(e),
        b(e, (e) => {
          u(e);
        });
    }
    function u(e) {
      _
        ? r(() => {
            c(e);
          })
        : c(e);
    }
    function c(e) {
      e.__upgraded__ &&
        e.__attached &&
        ((e.__attached = !1), e.detachedCallback && e.detachedCallback());
    }
    function l(e) {
      for (let t = e, n = window.wrap(document); t; ) {
        if (t == n) return !0;
        t =
          t.parentNode ||
          (t.nodeType === Node.DOCUMENT_FRAGMENT_NODE && t.host);
      }
    }
    function f(e) {
      if (e.shadowRoot && !e.shadowRoot.__watched) {
        g.dom && console.log("watching shadow-root for: ", e.localName);
        for (let t = e.shadowRoot; t; ) m(t), (t = t.olderShadowRoot);
      }
    }
    function p(e, n) {
      if (g.dom) {
        const o = n[0];
        if (o && "childList" === o.type && o.addedNodes && o.addedNodes) {
          for (var r = o.addedNodes[0]; r && r !== document && !r.host; )
            r = r.parentNode;
          var i =
            (r && (r.URL || r._URL || (r.host && r.host.localName))) || "";
          i = i.split("/?").shift().split("/").pop();
        }
        console.group("mutations (%d) [%s]", n.length, i || "");
      }
      const a = l(e);
      n.forEach((e) => {
        "childList" === e.type &&
          (M(e.addedNodes, (e) => {
            e.localName && t(e, a);
          }),
          M(e.removedNodes, (e) => {
            e.localName && s(e);
          }));
      }),
        g.dom && console.groupEnd();
    }
    function w(e) {
      for (e = window.wrap(e), e || (e = window.wrap(document)); e.parentNode; )
        e = e.parentNode;
      const t = e.__observer;
      t && (p(e, t.takeRecords()), i());
    }
    function m(e) {
      if (!e.__observer) {
        const t = new MutationObserver(p.bind(this, e));
        t.observe(e, { childList: !0, subtree: !0 }), (e.__observer = t);
      }
    }
    function v(e) {
      (e = window.wrap(e)),
        g.dom && console.group("upgradeDocument: ", e.baseURI.split("/").pop());
      const n = e === window.wrap(document);
      t(e, n), m(e), g.dom && console.groupEnd();
    }
    function h(e) {
      E(e, v);
    }
    var g = e.flags,
      b = e.forSubtree,
      E = e.forDocumentTree,
      _ = window.MutationObserver._isPolyfilled && g["throttle-attached"];
    (e.hasPolyfillMutations = _), (e.hasThrottledAttached = _);
    var y = !1;
    var N = [];
    var M = Array.prototype.forEach.call.bind(Array.prototype.forEach);
    const O = Element.prototype.createShadowRoot;
    O &&
      (Element.prototype.createShadowRoot = function () {
        const e = O.call(this);
        return window.CustomElements.watchShadow(this), e;
      }),
      (e.watchShadow = f),
      (e.upgradeDocumentTree = h),
      (e.upgradeDocument = v),
      (e.upgradeSubtree = o),
      (e.upgradeAll = t),
      (e.attached = a),
      (e.takeRecords = w);
  }),
  window.CustomElements.addModule((e) => {
    function t(t, o) {
      if (
        ("template" === t.localName &&
          window.HTMLTemplateElement &&
          HTMLTemplateElement.decorate &&
          HTMLTemplateElement.decorate(t),
        !t.__upgraded__ && t.nodeType === Node.ELEMENT_NODE)
      ) {
        const r = t.getAttribute("is"),
          i =
            e.getRegisteredDefinition(t.localName) ||
            e.getRegisteredDefinition(r);
        if (i && ((r && i.tag == t.localName) || (!r && !i["extends"])))
          return n(t, i, o);
      }
    }
    function n(t, n, r) {
      return (
        a.upgrade && console.group("upgrade:", t.localName),
        n.is && t.setAttribute("is", n.is),
        o(t, n),
        (t.__upgraded__ = !0),
        i(t),
        r && e.attached(t),
        e.upgradeSubtree(t, r),
        a.upgrade && console.groupEnd(),
        t
      );
    }
    function o(e, t) {
      Object.__proto__
        ? (e.__proto__ = t.prototype)
        : (r(e, t.prototype, t["native"]), (e.__proto__ = t.prototype));
    }
    function r(e, t, n) {
      for (let o = {}, r = t; r !== n && r !== HTMLElement.prototype; ) {
        for (let i, a = Object.getOwnPropertyNames(r), d = 0; (i = a[d]); d++)
          o[i] ||
            (Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i)),
            (o[i] = 1));
        r = Object.getPrototypeOf(r);
      }
    }
    function i(e) {
      e.createdCallback && e.createdCallback();
    }
    var a = e.flags;
    (e.upgrade = t), (e.upgradeWithDefinition = n), (e.implementPrototype = o);
  }),
  window.CustomElements.addModule((e) => {
    function t(t, o) {
      const s = o || {};
      if (!t)
        throw new Error(
          "document.registerElement: first argument `name` must not be empty"
        );
      if (t.indexOf("-") < 0)
        throw new Error(
          "document.registerElement: first argument ('name') must contain a dash ('-'). Argument provided was '" +
            String(t) +
            "'."
        );
      if (r(t))
        throw new Error(
          "Failed to execute 'registerElement' on 'Document': Registration failed for type '" +
            String(t) +
            "'. The type name is invalid."
        );
      if (u(t))
        throw new Error(
          "DuplicateDefinitionError: a type with name '" +
            String(t) +
            "' is already registered"
        );
      return (
        s.prototype || (s.prototype = Object.create(HTMLElement.prototype)),
        (s.__name = t.toLowerCase()),
        s["extends"] && (s["extends"] = s["extends"].toLowerCase()),
        (s.lifecycle = s.lifecycle || {}),
        (s.ancestry = i(s["extends"])),
        a(s),
        d(s),
        n(s.prototype),
        c(s.__name, s),
        (s.ctor = l(s)),
        (s.ctor.prototype = s.prototype),
        (s.prototype.constructor = s.ctor),
        e.ready && v(document),
        s.ctor
      );
    }
    function n(e) {
      if (!e.setAttribute._polyfilled) {
        const t = e.setAttribute;
        e.setAttribute = function (e, n) {
          o.call(this, e, n, t);
        };
        const n = e.removeAttribute;
        (e.removeAttribute = function (e) {
          o.call(this, e, null, n);
        }),
          (e.setAttribute._polyfilled = !0);
      }
    }
    function o(e, t, n) {
      e = e.toLowerCase();
      const o = this.getAttribute(e);
      n.apply(this, arguments);
      const r = this.getAttribute(e);
      this.attributeChangedCallback &&
        r !== o &&
        this.attributeChangedCallback(e, o, r);
    }
    function r(e) {
      for (let t = 0; t < _.length; t++) if (e === _[t]) return !0;
    }
    function i(e) {
      const t = u(e);
      return t ? i(t["extends"]).concat([t]) : [];
    }
    function a(e) {
      for (var t, n = e["extends"], o = 0; (t = e.ancestry[o]); o++)
        n = t.is && t.tag;
      (e.tag = n || e.__name), n && (e.is = e.__name);
    }
    function d(e) {
      if (!Object.__proto__) {
        let t = HTMLElement.prototype;
        if (e.is) {
          const n = document.createElement(e.tag);
          t = Object.getPrototypeOf(n);
        }
        for (var o, r = e.prototype, i = !1; r; )
          r == t && (i = !0),
            (o = Object.getPrototypeOf(r)),
            o && (r.__proto__ = o),
            (r = o);
        i ||
          console.warn(
            e.tag + " prototype not found in prototype chain for " + e.is
          ),
          (e["native"] = t);
      }
    }
    function s(e) {
      return g(M(e.tag), e);
    }
    function u(e) {
      if (e) return y[e.toLowerCase()];
    }
    function c(e, t) {
      y[e] = t;
    }
    function l(e) {
      return () => {
        return s(e);
      };
    }
    function f(e, t, n) {
      return e === N ? p(t, n) : O(e, t);
    }
    function p(e, t) {
      e && (e = e.toLowerCase()), t && (t = t.toLowerCase());
      const n = u(t || e);
      if (n) {
        if (e == n.tag && t == n.is) return new n.ctor();
        if (!t && !n.is) return new n.ctor();
      }
      let o;
      return t
        ? ((o = p(e)), o.setAttribute("is", t), o)
        : ((o = M(e)), e.indexOf("-") >= 0 && b(o, HTMLElement), o);
    }
    function w(e, t) {
      const n = e[t];
      e[t] = function () {
        const e = n.apply(this, arguments);
        return h(e), e;
      };
    }
    let m;
    var v = (e.isIE, e.upgradeDocumentTree);
    var h = e.upgradeAll;
    var g = e.upgradeWithDefinition;
    var b = e.implementPrototype;
    const E = e.useNative;

    var _ = [
      "annotation-xml",
      "color-profile",
      "font-face",
      "font-face-src",
      "font-face-uri",
      "font-face-format",
      "font-face-name",
      "missing-glyph",
    ];

    var y = {};
    var N = "http://www.w3.org/1999/xhtml";
    var M = document.createElement.bind(document);
    var O = document.createElementNS.bind(document);
    (m =
      Object.__proto__ || E
        ? (e, t) => {
            return e instanceof t;
          }
        : (e, t) => {
            if (e instanceof t) return !0;
            for (let n = e; n; ) {
              if (n === t.prototype) return !0;
              n = n.__proto__;
            }
            return !1;
          }),
      w(Node.prototype, "cloneNode"),
      w(document, "importNode"),
      (document.registerElement = t),
      (document.createElement = p),
      (document.createElementNS = f),
      (e.registry = y),
      (e["instanceof"] = m),
      (e.reservedTagList = _),
      (e.getRegisteredDefinition = u),
      (document.register = document.registerElement);
  }),
  ((e) => {
    function t() {
      i(window.wrap(document)), (window.CustomElements.ready = !0);
      const e =
        window.requestAnimationFrame ||
        ((e) => {
          setTimeout(e, 16);
        });
      e(() => {
        setTimeout(() => {
          (window.CustomElements.readyTime = Date.now()),
            window.HTMLImports &&
              (window.CustomElements.elapsed =
                window.CustomElements.readyTime - window.HTMLImports.readyTime),
            document.dispatchEvent(
              new CustomEvent("WebComponentsReady", { bubbles: !0 })
            );
        });
      });
    }
    const n = e.useNative,
      o = e.initializeModules;
    e.isIE;
    if (n) {
      const r = () => {};
      (e.watchShadow = r),
        (e.upgrade = r),
        (e.upgradeAll = r),
        (e.upgradeDocumentTree = r),
        (e.upgradeSubtree = r),
        (e.takeRecords = r),
        (e["instanceof"] = (e, t) => {
          return e instanceof t;
        });
    } else o();
    var i = e.upgradeDocumentTree;
    const a = e.upgradeDocument;
    if (
      (window.wrap ||
        (window.ShadowDOMPolyfill
          ? ((window.wrap = window.ShadowDOMPolyfill.wrapIfNeeded),
            (window.unwrap = window.ShadowDOMPolyfill.unwrapIfNeeded))
          : (window.wrap = window.unwrap =
              (e) => {
                return e;
              })),
      window.HTMLImports &&
        (window.HTMLImports.__importsParsingHook = (e) => {
          e["import"] && a(wrap(e["import"]));
        }),
      "complete" === document.readyState || e.flags.eager)
    )
      t();
    else if (
      "interactive" !== document.readyState ||
      window.attachEvent ||
      (window.HTMLImports && !window.HTMLImports.ready)
    ) {
      const d =
        window.HTMLImports && !window.HTMLImports.ready
          ? "HTMLImportsLoaded"
          : "DOMContentLoaded";
      window.addEventListener(d, t);
    } else t();
  })(window.CustomElements);
